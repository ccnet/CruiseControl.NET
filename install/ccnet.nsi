; Script generated by the HM NIS Edit Script Wizard.

Unicode true

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "CruiseControl.NET"
!define PRODUCT_VERSION "${VERSION}"
!define PRODUCT_PUBLISHER "ThoughtWorks"
!define PRODUCT_WEB_SITE "https://ccnet.github.io/CruiseControl.NET/"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\ccnet.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define PRODUCT_STARTMENU_REGVAL "NSIS:StartMenuDir"
!define PRODUCT_DEFAULT_DIR_KEY "Software\${PRODUCT_PUBLISHER}\${PRODUCT_NAME}${PRODUCT_VERSION}\InstallDir"


; Plug-ins
!addplugindir .

; MUI 1.67 compatible ------
!include "MUI.nsh"

SetCompressor lzma

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "..\project\CCTrayLib\ResourceIcons\Green.ico"
!define MUI_UNICON "..\project\CCTrayLib\ResourceIcons\Green.ico"
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_BITMAP "install_logo.bmp"
!define MUI_HEADERIMAGE_RIGHT
!define MUI_COMPONENTSPAGE_SMALLDESC


; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\Dist\license.txt"
; Components page
!insertmacro MUI_PAGE_COMPONENTS
; Add service page
Page custom AdditionalConfiguration
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Start menu page
var ICONS_GROUP
!define MUI_STARTMENUPAGE_NODISABLE
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "CruiseControl.NET"
!define MUI_STARTMENUPAGE_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "${PRODUCT_STARTMENU_REGVAL}"
!insertmacro MUI_PAGE_STARTMENU Application $ICONS_GROUP
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
;Page custom InstallService InstallService
;Page custom CreateVirtualDirectory CreateVirtualDirectory
; Finish page
Var FinishMessage
!define MUI_FINISHPAGE_NOAUTOCLOSE
!define MUI_WELCOMEFINISHPAGE_CUSTOMFUNCTION_INIT PrepareFinishPageMessage
!define MUI_FINISHPAGE_TEXT $FinishMessage
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "..\Publish\${PRODUCT_NAME}-${PRODUCT_VERSION}-Setup.exe"
InstallDir "$PROGRAMFILES\CruiseControl.NET"
InstallDirRegKey HKLM "${PRODUCT_DEFAULT_DIR_KEY}" ""
ShowInstDetails show
ShowUnInstDetails show


Section "CruiseControl.NET Server" SEC01
  SetOutPath "$INSTDIR\server"
  SetOverwrite ifnewer
  File /r /x *.config "..\Dist\Server\*"

  Call BackupAndExtractConfigFiles

  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateDirectory "$SMPROGRAMS\$ICONS_GROUP"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\CruiseControl.NET.lnk" "$INSTDIR\server\ccnet.exe"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\CCValidator.lnk" "$INSTDIR\server\CCValidator.exe"
  CreateShortCut "$DESKTOP\CruiseControl.NET.lnk" "$INSTDIR\server\ccnet.exe"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\CruiseControl.NET Config.lnk" "$INSTDIR\server\ccnet.config"
  !insertmacro MUI_STARTMENU_WRITE_END
  
  Call InstallService
SectionEnd

Section "Web Dashboard" SEC02
  SetOutPath "$INSTDIR\webdashboard"
  SetOverwrite ifnewer
  File /r "..\Dist\WebDashboard\*"

  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  !insertmacro MUI_STARTMENU_WRITE_END
  
  Call CreateVirtualDirectory
SectionEnd

;Section "Migration Wizard" SEC03
;  SetOutPath "$INSTDIR\Server"
;  SetOverwrite ifnewer
;  File /r "..\Dist\Migration\*"
;
;  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
;  CreateDirectory "$SMPROGRAMS\$ICONS_GROUP"
;  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\CCMigration.lnk" "$INSTDIR\server\CCNetMigrationWizard.exe"
;  !insertmacro MUI_STARTMENU_WRITE_END
;SectionEnd

Section "Examples" SEC04
  SetOutPath "$INSTDIR\Examples"
  SetOverwrite on
  File /r "..\Dist\examples\*.config"

  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

Section -AdditionalIcons
  SetOutPath $INSTDIR
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk" "$INSTDIR\uninst.exe"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Documentation.lnk" "$INSTDIR\webdashboard\doc\index.html"
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\Server\ccnet.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\Server\ccnet.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
  WriteRegStr HKLM "${PRODUCT_DEFAULT_DIR_KEY}" "" "$INSTDIR"
SectionEnd

; Section descriptions
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC01} "The core CruiseControl.NET server."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC02} "The ASP.NET Web Dashboard for configuring and monitoring builds managed by CruiseControl.NET."
;  !insertmacro MUI_DESCRIPTION_TEXT ${SEC03} "Migration wizard for upgrading from 1.4.4 or older to 1.5.0."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC04} "Documentation for the CruiseControl.NET Product Suite"
!insertmacro MUI_FUNCTION_DESCRIPTION_END

; Installer functions
Function .onInit
  ;Extract InstallOptions INI files
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT_AS ".\AdditionalConfiguration.ini" "AdditionalConfiguration.ini"
FunctionEnd

LangString TEXT_IO_TITLE ${LANG_ENGLISH} "Additional Configuration"
LangString TEXT_IO_SUBTITLE ${LANG_ENGLISH} "Configure the Windows Service and IIS virtual directory for CruiseControl.NET."

Function AdditionalConfiguration
  !insertmacro MUI_HEADER_TEXT "$(TEXT_IO_TITLE)" "$(TEXT_IO_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "AdditionalConfiguration.ini"
FunctionEnd

Var ConfigBackedUp
Function BackupAndExtractConfigFiles
  SetOutPath "$INSTDIR\server"
  StrCpy $ConfigBackedUp "no"

  IfFileExists $INSTDIR\server\ccnet.exe.config 0 extractCCNetExeConfig
    DetailPrint "Backing up ccnet.exe.config to ccnet.exe.config.old..."
    Delete $INSTDIR\server\ccnet.exe.config.old
    Rename $INSTDIR\server\ccnet.exe.config $INSTDIR\server\ccnet.exe.config.old
    StrCpy $ConfigBackedUp "yes"
  extractCCNetExeConfig:
    File "..\Dist\Server\ccnet.exe.config"

  IfFileExists $INSTDIR\server\ccservice.exe.config 0 extractCCServiceExeConfig
    DetailPrint "Backing up ccservice.exe.config to ccservice.exe.config.old..."
    Delete $INSTDIR\server\ccservice.exe.config.old
    Rename $INSTDIR\server\ccservice.exe.config $INSTDIR\server\ccservice.exe.config.old
    StrCpy $ConfigBackedUp "yes"
  extractCCServiceExeConfig:
    File "..\Dist\Server\ccservice.exe.config"

  IfFileExists $INSTDIR\server\ccnet.config done 0
    File "..\Dist\Server\ccnet.config"
  done:

FunctionEnd

Var InstallService
Function InstallService
  !insertmacro MUI_INSTALLOPTIONS_READ $InstallService "AdditionalConfiguration.ini" "Field 1" "State"
  StrCmp $InstallService "0" exit
    DetailPrint "Checking if ccservice is already installed..."
    nsSCM::QueryStatus /NOUNLOAD "CCService"
    Pop $0
    Pop $1
    StrCmp $0 "error" installService
      MessageBox MB_ICONINFORMATION|MB_OK \
      "There is already a service with the name 'CCService' installed. The CruiseControl.NET service will need to be installed manually."
      Return
    installService:
      DetailPrint "Installing ccservice..."
      nsSCM::Install /NOUNLOAD "CCService" "CruiseControl.NET Server" 16 3 "$INSTDIR\server\ccservice.exe" "" ""
      Return
  exit:
FunctionEnd

; Messages for virtual directory creation error messages
LangString ERROR_VDIR_CANNOT_SET_ASPNET_VERSION ${LANG_ENGLISH} "The installer attempted to set the ASP.NET version for the CruiseControl.NET Web Dashboard but was not successful. Please check IIS after the installer has completed and manually set the ASP.NET version."
LangString ERROR_VDIR_CREATION_UNCONFIRMED ${LANG_ENGLISH} "The installer attempted to create the virtual directory for the CruiseControl.NET Web Dashboard but could not confirm its creation. Please check IIS after the installer has completed and manually create the virtual directory."
LangString ERROR_VDIR_ALREADY_EXISTS ${LANG_ENGLISH} "A virtual directory called 'ccnet' already exists in the local IIS server's default web site. Please manually create a virtual directory for the CruiseControl.NET Web Dashboard after installation has completed."
LangString ERROR_VDIR_PATH_UNDEFINED ${LANG_ENGLISH} "The installation directory for the CruiseControl.NET Web Dashboard was not specified. Please manually create a virtual directory after installation has completed."
LangString ERROR_VDIR_TIMEOUT ${LANG_ENGLISH} "A timeout occurred during the creation of the virtual directory for the CruiseControl.NET Web Dashboard. Please manually create a virtual directory after installation has completed."
LangString ERROR_GENERAL ${LANG_ENGLISH} "An unspecified error occurred during the creation of the virtual directory for the CruiseControl.NET Web Dashboard. Please manually create a virtual directory after installation has completed."
LangString ERROR_EXEC ${LANG_ENGLISH} "Could not start the createCCNetVDir.vbs script. Please manually create a virtual directory for the CruiseControl.NET Web dashboard after installation has completed."

Var CreateVirtualDirectory
Var ErrorMessage
Function CreateVirtualDirectory
  !insertmacro MUI_INSTALLOPTIONS_READ $CreateVirtualDirectory "AdditionalConfiguration.ini" "Field 2" "State"
  StrCmp $CreateVirtualDirectory "0" exit
    SetOutPath $TEMP
    SetOverwrite on
    File "createCCNetVDir.vbs"
    DetailPrint "Creating IIS virtual directory..."
    nsExec::ExecToLog /TIMEOUT=60000 '"$SYSDIR\cscript.exe" "$TEMP\createCCNetVDir.vbs" "$INSTDIR\webdashboard"'
    Pop $0
    StrCmp $0 "5" errorcode5
    StrCmp $0 "4" errorcode4
    StrCmp $0 "3" errorcode3
    StrCmp $0 "2" errorcode2
    StrCmp $0 "1" errorcode1
    StrCmp $0 "timeout" errorTimeout
    StrCmp $0 "error" errorExec
    Goto writeRegistryString
    errorcode5:
      StrCpy $ErrorMessage $(ERROR_VDIR_CANNOT_SET_ASPNET_VERSION)
      Goto showError
    errorcode4:
      StrCpy $ErrorMessage $(ERROR_VDIR_CREATION_UNCONFIRMED)
      Goto showError
    errorcode3:
      StrCpy $ErrorMessage $(ERROR_VDIR_ALREADY_EXISTS)
      Goto showError
    errorcode2:
      StrCpy $ErrorMessage $(ERROR_VDIR_PATH_UNDEFINED)
      Goto showError
    errorcode1:
      StrCpy $ErrorMessage $(ERROR_GENERAL)
      Goto showError
    errorTimeout:
      StrCpy $ErrorMessage $(ERROR_VDIR_TIMEOUT)
      Goto showError
    errorExec:
      StrCpy $ErrorMessage $(ERROR_EXEC)
    showError:
      MessageBox MB_ICONEXCLAMATION|MB_OK $ErrorMessage
      WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "CCNetVDir" 0
      Goto exit
    writeRegistryString:
      WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "CCNetVDir" $CreateVirtualDirectory
  exit:
FunctionEnd

Var MessageDetail
Function PrepareFinishPageMessage
  StrCmp $ConfigBackedUp "yes" 0 prepMessage
    StrCpy $MessageDetail "Your existing configuration files have been backed up to ccnet.exe.config.old, ccservice.exe.config.old.\r\n"
prepMessage:
  StrCpy $FinishMessage "$(^Name) has been installed on your computer.\r\n\r\n$MessageDetail\r\nClick Finish to close this wizard."
FunctionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components? (THIS COULD DELETE ALL CONFIGURATION FILES AND BUILD ARTIFACTS!!)" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Call un.InstallService
  Call un.RemoveVirtualDirectory
  !insertmacro MUI_STARTMENU_GETFOLDER "Application" $ICONS_GROUP

  Delete "$SMPROGRAMS\$ICONS_GROUP\Documentation.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\Website.lnk"
  Delete "$DESKTOP\CruiseControl.NET.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\CruiseControl.NET.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\CruiseControl.NET Config.lnk"

  RMDir "$SMPROGRAMS\$ICONS_GROUP"
  RMDir /r "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd

Function un.InstallService
  nsSCM::QueryStatus /NOUNLOAD "CCService"
  Pop $0
  Pop $1
  StrCmp $0 "error" exit
    DetailPrint "Stopping the CruiseControl.NET service..."
    nsSCM::Stop /NOUNLOAD "CCService"
    DetailPrint "Removing the CruiseControl.NET service..."
    nsSCM::Remove /NOUNLOAD "CCService"
    Pop $0
    Strcmp $0 "success" exit
      MessageBox MB_ICONEXCLAMATION|MB_OK "The CruiseControl.NET service could not be removed."
  exit:
    DetailPrint "CruiseControl.NET service successfully removed."
FunctionEnd

Var RemoveVDir
Function un.RemoveVirtualDirectory
  ReadRegStr $RemoveVDir ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "CCNetVDir"
  StrCmp $RemoveVDir "0" skipRemoveVDir
    SetOutPath $TEMP
    SetOverwrite on
    File "removeCCNetVDir.vbs"
    DetailPrint "Removing IIS virtual directory..."
    nsExec::ExecToLog /TIMEOUT=60000 '"$SYSDIR\cscript.exe" "$TEMP\removeCCNetVDir.vbs" "$INSTDIR\webdashboard"'
    Pop $0
    StrCmp $0 "0" exit
      MessageBox MB_ICONINFORMATION|MB_OK "Could not remove the virtual directory due to a general error. Please remove the virtual directory manually."
    Goto exit
  skipRemoveVDir:
    DetailPrint "The CruiseControl.NET virtual directory has not been installed."
  exit:
FunctionEnd
