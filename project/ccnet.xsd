<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://thoughtworks.org/ccnet/1/6"
           elementFormDefault="qualified"
           xmlns="http://thoughtworks.org/ccnet/1/6"
           xmlns:cb="urn:ccnet.config.builder"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="urn:ccnet.config.builder" />
  <xs:element name="cruisecontrol">
    <xs:annotation>
      <xs:documentation>The root element for a CruiseControl.NET server configuration.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice minOccurs="0" maxOccurs="1">
          <xs:element name="externalFileSecurity" type="externalFileSecurity">
            <xs:annotation>
              <xs:documentation>
                Defines a security manager implementation that implements security with configuration in external files.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="internalSecurity" type="internalSecurity">
            <xs:annotation>
              <xs:documentation>
                Defines a security manager implementation that implements security internally \- the security settings are stored in the same configuration file.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="nullSecurity" type="nullSecurity">
            <xs:annotation>
              <xs:documentation>
                A default implementation of a security manager where there is no security (e.g. every right is allowed);
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:choice>
        <xs:element name="project" type="project">
          <xs:annotation>
            <xs:documentation>A build project.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="queue" type="queue">
          <xs:annotation>
            <xs:documentation>
              Configure the behaviour of the build queues.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" ref="cb:define">
          <xs:annotation>
            <xs:documentation>Defines a preprocessor constant.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" ref="cb:scope">
          <xs:annotation>
            <xs:documentation>Controls the scope of preprocessor definitions.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="externalFileSecurity">
    <xs:all>
      <xs:element name="files" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The files to load.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="file" type="String">
              <xs:annotation>
                <xs:documentation>
                  The external file to import.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="cache" type="sessionCache" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The associated session cache.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="audit" type="auditLoggers" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The audit loggers.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="auditReader" type="auditReader" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The audit reader.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defaults" type="permission" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default permissions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="channel" type="channelSecurity" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The channel security requirements.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="internalSecurity">
    <xs:all>
      <xs:element name="users" type="users" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The users for the same.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="permissions" type="permissions" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The server-level permissions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cache" type="sessionCache" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The associated session cache.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="audit" type="auditLoggers" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The audit loggers.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="auditReader" type="auditReader" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The audit reader.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defaults" type="permission" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default permissions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="channel" type="channelSecurity" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The channel security requirements.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="nullSecurity">
  </xs:complexType>

  <xs:complexType name="users">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="ldapUser" type="ldapUser">
        <xs:annotation>
          <xs:documentation>
            Stores a user name - authentication will come from Active Directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="passwordUser" type="passwordUser">
        <xs:annotation>
          <xs:documentation>
            User password authentication checks that the user name and password combination is valid.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="simpleUser" type="simpleUser">
        <xs:annotation>
          <xs:documentation>
            User name authentication checks that the user name is valid.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="ldapUser">
    <xs:all>
      <xs:element name="domain" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The AD domain to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The user name for this user.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="passwordUser">
    <xs:all>
      <xs:element name="password" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The password for this user.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name for this user.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name for this user.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="simpleUser">
    <xs:all>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name for this user.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The login name for this user.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="sessionCache" abstract="true"/>

  <xs:complexType name="fileBasedCache">
    <xs:complexContent>
      <xs:extension base="sessionCache">
        <xs:all>
          <xs:element name="location" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location where the backing files are stored. If this is a relative folder, it will be relative to the program data folder for CruiseControl.NET.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="duration" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The duration, in minutes, that a session is stored for.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="mode" type="SessionExpiryMode" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The type of expiration period to use. Options are either Sliding (the expiry time is moved every time a security request is made) or Fixed (expiry time never changes).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="inMemoryCache">
    <xs:complexContent>
      <xs:extension base="sessionCache">
        <xs:all>
          <xs:element name="duration" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The duration, in minutes, that a session is stored for.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="mode" type="SessionExpiryMode" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The type of expiration period to use. Options are either Sliding (the expiry time is moved every time a security request is made) or Fixed (expiry time never changes).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="auditLoggers">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="xmlFileAudit" type="xmlFileAudit">
        <xs:annotation>
          <xs:documentation>
            Sends audit logging information to a file. The information will be stored in an XML format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="xmlFileAudit">
    <xs:all>
      <xs:element name="location" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to log the audit events.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="success" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to log successful events or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="failure" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to log failed events or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="auditReader" abstract="true"/>

  <xs:complexType name="xmlFileAuditReader">
    <xs:complexContent>
      <xs:extension base="auditReader">
        <xs:all>
          <xs:element name="location" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the file to read the audit events from.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="channelSecurity" abstract="true"/>

  <xs:complexType name="encryptedChannel">
    <xs:complexContent>
      <xs:extension base="channelSecurity"></xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="queue">
    <xs:all>
      <xs:element name="duplicates" type="QueueDuplicateHandlingMode" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Defines how duplicates should be handled.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lockqueues" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A comma sperated list of queue names that the queue should acquire a lock against.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projects" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>The projects that are associated with this queue.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="project" type="project" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>A build project.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="unbounded" ref="cb:scope">
              <xs:annotation>
                <xs:documentation>Controls the scope of preprocessor definitions.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the queue.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="project">
    <xs:all>
      <xs:element name="prebuild" type="Tasks" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of Tasks to run before the build starts and before the source is updated. A failed task will fail the build and any subsequent tasks will not run. Tasks are run sequentially, in the order they appear in the configuration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="security" type="ProjectAuthorisation" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Any security for the project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parameters" type="Parameters" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dynamic build parameters - these are parameters that are set at build time instead of being hard-coded within the configuration file
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="linkedSites" type="NameValuePairs" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Links for this project to other sites.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="state" type="stateManager" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A state manager for the project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="data" type="dataStore" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of data storage to use for the project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="webURL" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A reporting URL for this project. This is used by CCTray and the Email Publisher. Typically you should navigate to the Project Report on the Dashboard, and use its URL.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="impersonation" type="impersonation" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            An optional impersonation account.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxSourceControlRetries" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum amount of source control exceptions in a row that may occur, before the project goes to the stopped state(when stopProjectOnReachingMaxSourceControlRetries is set to true).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="stopProjectOnReachingMaxSourceControlRetries" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Stops the project on reaching maxSourceControlRetries or not. When set to true, the project will be stopped when the amount of consecutive source control errors is equal to maxSourceControlRetries.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourceControlErrorHandling" type="SourceControlErrorHandlingPolicy" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            What action to take when a source control error occurs (during GetModifications).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="queue" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the integration queue that this project will use. By default, each project runs in its own queue.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="queuePriority" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The priority of this project within the integration queue. If multiple projects have pending requests in the specified queue then these requests will be executed according to their priority. Lower priority numbers indicate that integration requests for this project will execute before other projects in the same queue, however projects with priority 0 are always executed after projects with non-zero priorities in the same queue.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcecontrol" type="SourceControl" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The source control block to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="publishers" type="Tasks" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The list of build-completed publishers used by this project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modificationDelaySeconds" type="xs:double" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The minimum number of seconds allowed between the last check in and the start of a valid build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="labeller" type="Labeller" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Labellers are used to generate the label that CCNet uses to identify the specific build. The label generated by CCNet can be used to version your assemblies or label your version control system with each build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tasks" type="Tasks" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of Tasks to run as part of the build. A failed task will fail the build and any subsequent tasks will not run. Tasks are run sequentially, in the order they appear in the configuration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="initialState" type="ProjectInitialState" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Sets the state of the project when CCNet service/Console starts. Stopped can be handy when you are adding a lot of projects which are depending on other projects (via the project trigger) and these may not be build right away. This value is only used when startupMode is set to UseInitialState.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startupMode" type="ProjectStartupMode" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The start-up mode for this project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            An optional description of the project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="category" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A general category for this project. This is used by the dashboard to provide groupings to the project. Categories do not span servers.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="triggers" type="Triggers" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Trigger blocks allow you to specify when CruiseControl.NET will start a new integration cycle.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The Working Directory for the project (this is used by other blocks). Relative paths are relative to a directory called the project Name in the directory where the CruiseControl.NET server was launched from. The Working Directory is meant to contain the checked out version of the project under integration. Make sure this folder us unique per project to prevent problems with the build. You don't need to quote the Working Directory, even if it contains spaces.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="artifactDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The Artifact Directory for the project (this is used by other blocks). Relative paths are relative to a directory called the project Name in the directory where the CruiseControl.NET server was launched from. The Artifact Directory is meant to be a persistence location for anything you want saved from the results of the build, e.g. build logs, distributables, etc. Make sure this folder us unique per project to prevent problems with reporting about a build. You don't need to quote the Aftifact Directory, even if it contains spaces.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalLinks" type="ExternalLinks" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Each of these are used to display project related links on the project report page of the Web Dashboard, and are meant as a convenient shortcut to project-related web sites outside of CruiseControl.NET.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="askForForceBuildReason" type="DisplayLevel" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should a reason be requested when a force build is triggered.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of your project - this must be unique for any given CruiseControl.NET server.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ExternalLinks"></xs:complexType>

  <xs:complexType name="Parameters">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="booleanParameter" type="booleanParameter">
        <xs:annotation>
          <xs:documentation>
            This will prompt the user to enter a boolean value when a force build is requested.
            This parameter can then be used by a dynamic value in a task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dateParameter" type="dateParameter">
        <xs:annotation>
          <xs:documentation>
            This will prompt the user to enter a date value when a force build is requested.
            This parameter can then be used by a dynamic value in a task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numericParameter" type="numericParameter">
        <xs:annotation>
          <xs:documentation>
            This will prompt the user to enter a numeric value when a force build is requested.
            This parameter can then be used by a dynamic value in a task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="selectParameter" type="selectParameter">
        <xs:annotation>
          <xs:documentation>
            This will prompt the user to select a value from a list of values when a force build is requested.
            This parameter can then be used by a dynamic value in a task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="textParameter" type="textParameter">
        <xs:annotation>
          <xs:documentation>
            This will prompt the user to enter a text value when a force build is requested.
            This parameter can then be used by a dynamic value in a task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="passwordParameter" type="passwordParameter">
        <xs:annotation>
          <xs:documentation>
            This will prompt the user to enter a masked text value when a force build is requested.
            This parameter can then be used by a dynamic value in a task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="booleanParameter">
    <xs:all>
      <xs:element name="required" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Is the parameter required?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="true" type="NameValuePair" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The value to use when the parameter is true. If the name attribute is set, then the user will see that as the selection value. Otherwise the actual value will be displayed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="false" type="NameValuePair" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The value to use when the parameter is false. If the name attribute is set, then the user will see that as the selection value. Otherwise the actual value will be displayed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the parameter.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="dateParameter">
    <xs:all>
      <xs:element name="minimum" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The mimimum allowed value of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maximum" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum allowed value of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="required" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Is the parameter required?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the parameter.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="numericParameter">
    <xs:all>
      <xs:element name="minimum" type="xs:double" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The mimimum allowed value of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maximum" type="xs:double" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum allowed value of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="required" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Is the parameter required?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String">
      <xs:annotation>
        <xs:documentation>
          The name of the parameter.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="selectParameter">
    <xs:all>
      <xs:element name="required" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Is the parameter required?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourceFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Load the values from a file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowedValues" type="ValuesList" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            An array of allowed values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the parameter.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="textParameter">
    <xs:all>
      <xs:element name="minimum" type="xs:int" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The minimum allowed length.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maximum" type="xs:int" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum allowed length of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="required" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Is the parameter required?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the parameter.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="passwordParameter">
    <xs:all>
      <xs:element name="minimum" type="xs:int" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The minimum allowed length.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maximum" type="xs:int" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum allowed length of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="required" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Is the parameter required?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="display" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The display name of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the parameter.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Labeller" abstract="true"/>

  <xs:complexType name="assemblyVersionLabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="major" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Major number component of the version.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="minor" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Minor number component of the version.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="build" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Build number component of the version. If not specified the build number is incremented on every successful integration.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="revision" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Revision number component of the version. If not specified the revision number is the LastChangeNumber, provided by some VCS (e.g. the svn revision with the Subversion task).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="incrementOnFailure" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to increase the build number component if the integration fails. By default the build number component will only increase if the integration was successful.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dateLabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="yearFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The format for the year part.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="monthFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The format for the month part.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dayFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The format for the day part.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="revisionFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The format for the revision part.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="defaultlabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="prefix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Any string to be put in front of all labels.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="postfix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Any string to be put at the end of all labels.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="initialBuildLabel" type="xs:int" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Allows you to set the initial build number.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="incrementOnFailure" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                If true, the label will be incremented even if the build fails. Otherwise it will only be incremented if the build succeeds.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                A format applied to the buildnumber.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileLabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="labelFilePath" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The pathname of the file to read. This can be the absolute path or one relative to the project's working directory.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="prefix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Any string to be put in front of all labels.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="allowDuplicateSubsequentLabels" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Controls whether duplicate labels are permitted or not.  If true, duplicate labels are left intact.  If false, the label will be suffixed with "\-n", where "n" is incremented for each successive duplication.  Defaults to "true"
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="iterationlabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="duration" type="xs:positiveInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The duration of the iteration in weeks.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="releaseStartDate" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The start date for the release (the start date of iteration one).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="separator" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The separator between the iteration number and the build number.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="prefix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Any string to be put in front of all labels.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="postfix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Any string to be put at the end of all labels.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="initialBuildLabel" type="xs:int" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Allows you to set the initial build number.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="incrementOnFailure" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                If true, the label will be incremented even if the build fails. Otherwise it will only be incremented if the build succeeds.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                A format applied to the buildnumber.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="lastChangeLabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="prefix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The string to be prepended onto the last change number.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="allowDuplicateSubsequentLabels" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Controls whether duplicate subsequent labels are permitted or not. If true, duplicate labels are left intact. If false, the label will always be suffixed with ".n", where "n" is incremented for each successive duplication. Defaults to true.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="remoteProjectLabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="serverUri" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The URI to the remote cruise server containing the project to use (defaults to the local build server).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The project to retrieve the label from.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="stateFileLabeller">
    <xs:complexContent>
      <xs:extension base="Labeller">
        <xs:all>
          <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The project to retrieve the label from.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the labeller.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ProjectAuthorisation" abstract="true"/>

  <xs:complexType name="defaultProjectSecurity">
    <xs:complexContent>
      <xs:extension base="ProjectAuthorisation">
        <xs:all>
          <xs:element name="defaultRight" type="SecurityRight" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The default right to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="permissions" type="permissions" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The allowed permissions.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="guest" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the account to use for guests.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="inheritedProjectSecurity">
    <xs:complexContent>
      <xs:extension base="ProjectAuthorisation">
        <xs:all>
          <xs:element name="guest" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the account to use for guests.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="nullProjectSecurity">
    <xs:complexContent>
      <xs:extension base="ProjectAuthorisation">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SourceControl" abstract="true"/>

  <xs:complexType name="SourceControls">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="accurev" type="accurev">
        <xs:annotation>
          <xs:documentation>
            Source control integration for Accurev's source control product (http://www.accurev.com).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alienbrain" type="alienbrain">
        <xs:annotation>
          <xs:documentation>
            Source control integration for the Alienbrain source control product.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bitkeeper" type="bitkeeper">
        <xs:annotation>
          <xs:documentation>
            Source control integration for the BitKeeper source control product.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clearCase" type="clearCase">
        <xs:annotation>
          <xs:documentation>
            Rational ClearCase source control block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cvs" type="cvs">
        <xs:annotation>
          <xs:documentation>
            Please refer to [Using CruiseControl.NET with CVS] for an overview of this block.
            For CVS you must define where the CVS executable (if you give a relative path, it must be relative to the ccnet.exe application) is and the working directory for checked out code.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="external" type="external">
        <xs:annotation>
          <xs:documentation>
            A source control implementation for use when the source control system doesn't integrate directly with CCNet.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filesystem" type="filesystem">
        <xs:annotation>
          <xs:documentation>
            Use the 'Filesystem' Source Control plugin to check for modifications on a directory accessible by the build server. A file is considered modified if the file's modified time stamp is more recent than the last time CruiseControl.Net checked for modifications. You can use either directories on 'mapped' drives (local or remote), or UNC paths (remote).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filtered" type="filtered">
        <xs:annotation>
          <xs:documentation>
            The FilteredSourceControl allows you to filter out modifications that are used to trigger a build. If for example, you have certain files (such as web pages or document files) under source control that you don't want to have trigger the build, you can use this class to ensure that their changes will keep a new build from launching.
            The FilteredSourceControl works together with all of the source controls supported by CCNet (including the [Multi Source Control Block]). It can also be included under the [Multi Source Control Block] provider so that you could have multiple FilterSourceControls each filtering a different set of modifications from different source control providers. Essentially, it acts as a decorator (or an example of the pipes and filters pattern ), wrapping around the specific SourceControl provider that you want to use.
            The FilteredSourceControl includes both inclusion and exclusion filters for specifying what modifications should be included/excluded. Multiple inclusion and exclusion filters can be specified or, alternately, no inclusion or exclusion filter could be specified. If a modification is matched by both the inclusion and exclusion filter, then the exclusion filter will take preference and the modification will not be included in the modification set. It is relatively straightforward to build new filters, (such as one to filter modifications based on email address).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ftpSourceControl" type="ftpSourceControl">
        <xs:annotation>
          <xs:documentation>
            The Ftp Soure control block allows to detect new and changed files at an Ftp site.
            Deleted files are  *NOT* detected.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="git" type="git">
        <xs:annotation>
          <xs:documentation>
            Source Control Plugin for CruiseControl.NET that talks to git.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hg" type="hg">
        <xs:annotation>
          <xs:documentation>
            Provides basic support for Mercurial repositories. Checking for changes, checking out or updating sources, and tagging are supported.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mks" type="mks">
        <xs:annotation>
          <xs:documentation>
            MKS Source Integrity Source Control Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="multi" type="multi">
        <xs:annotation>
          <xs:documentation>
            You can use the 'Multi' Source Control plugin to check for modifications from any number of source control repositories. You may want to do this if (for example) you want to build if the source for your project changes, or if the binaries your project depends on change (which may be stored on a file server).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nullSourceControl" type="nullSourceControl">
        <xs:annotation>
          <xs:documentation>
            Use the Null Source Control if you don't want to check a Source Control repository for changes. In this instance you would always want to either use a 'Force Build' Trigger or always manually start builds, from the [Web Dashboard] or [CCTray].
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="p4" type="p4">
        <xs:annotation>
          <xs:documentation>
            Perforce source control block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="plasticscm" type="plasticscm">
        <xs:annotation>
          <xs:documentation>
            This supports Códice Software's Plastic SCM source control system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pvcs" type="pvcs">
        <xs:annotation>
          <xs:documentation>
            CruiseControl.NET supports integrating with the PVCS Source Control system via the pcli client.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="robocopy" type="robocopy">
        <xs:annotation>
          <xs:documentation>
            Uses RoboCopy as Source Control.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="starteam" type="starteam">
        <xs:annotation>
          <xs:documentation>
            Source Controller for StarTeam SCM.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="surround" type="surround">
        <xs:annotation>
          <xs:documentation>
            Source Controller for Seapine Surround SCM
            The Seapine Surround provider is designed to work with Surround 4.1. It may not work with earlier versions of Surround.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="svn" type="svn">
        <xs:annotation>
          <xs:documentation>
            CruiseControl.NET provides basic support for Subversion repositories. Checking for changes, checking out or updating sources, and tagging\-by\-copying are supported, but more advanced features such as using Subversion revision numbers are not yet supported. Subversion support is under active development and will improve over time.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="synergy" type="synergy">
        <xs:annotation>
          <xs:documentation>
            CruiseControl.NET SCM plugin for CM Synergy.
            Detection of modifications is entirely task based rather than object based, which may present problems for pre\-6.3 lifecycles. Successful integration may be published through shared manual task folders and/or baselining.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="vault" type="vault">
        <xs:annotation>
          <xs:documentation>
            SourceGear Vault Source Control Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="vss" type="vss">
        <xs:annotation>
          <xs:documentation>
            For Visual Source Safe you must specify the executable, project, username and password. You may also specify the SSDIR. If SSDIR is not set the default or the SSDIR environment variable will be used.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="vsts" type="vsts">
        <xs:annotation>
          <xs:documentation>
            Source Control Plugin for CruiseControl.NET that talks to VSTS Team Foundation Server.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="alienbrain">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="server" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Alienbrain server hostname or ip adress. The list of valid server name and ip adresses are listed in the File, Connect to project database, Step 1, list box.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="database" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Alienbrain project database name. The list of valid project databases are listed in the File, Connect to project database, Step 2, list box.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="username" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the user you want to use to connect to the server project database.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The password of the user you want to use to connect to the server project database.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="branch" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The path of the branch specification. to enumarate the name of the branches, use the ab enumbranch command line.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                This is the path of to monitor the file changes. Use alienbrain://Code or ab://Code project path format.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the current version of the source should be retrieved from Alienbrain.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The path where the get latest will update the files.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether or not the repository should be labelled after a successful build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The executable to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="accurev">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the current version of the source should be retrieved from AccuRev.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies the path to the AccuRev command line tool. You should only have to include this element if the tool isn't in your path. By default, the AccuRev client installation process names it accurev.exe and puts it in C:\Program Files\AccuRev\bin.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="homeDir" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies the location of the AccuRev home directory. The pathname can be either absolute or relative to the project artifact directory. If not specified, AccuRev will follow its rules for determining the location. The home directory itself is always named ".accurev".
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether or not CCNet should create an AccuRev snapshot when the build is successful. If set to true, CCNet will create a snapshot of the workspace's basis stream as of the starting time of the build, naming it according to the build label.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="login" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether or not CCNet should log in to AccuRev using the specified principal and password. If set to true, the principal and password elements are required, and CCNet will use them to log in to AccuRev before executing any AccuRev commands.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies the password for the AccuRev "principal" (userid).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="principal" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies the AccuRev "principal" (userid) to run under. If not specified, AccuRev will follow its rules for determining the principal.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workspace" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies the location on disk of the AccuRev workspace that CCNet monitors for changes. The pathname can be either absolute or relative to the project working directory, and must identify the top\-level directory of the workspace. Note that this is not the same as the workspace name \- AccuRev will determine the workspace name from the disk pathname.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="bitkeeper">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Absolute, DOS\-style, path to bk.exe.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Absolute, DOS\-style, path to permanent BK repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Add BK tag on successful build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Automatically pull latest source into permanent BK repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="fileHistory" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Include history of each file, rather than just ChangeSets.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cloneTo" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Make a clone of the permanent BK repository into the designated path. The DOS\-style path can be relative to WorkingDirectory or absolute.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clearCase">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies the path to the ClearCase command line tool. You should only have to include this element if the tool isn't in your path. By default, the ClearCase client installation puts cleartool in your path.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="projectVobName" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the project VOB that the view path uses.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="useBaseline" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether a baseline should be applied when the build is successful. Requires the VOB your view references to be a UCM VOB.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="useLabel" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether a label should be applied when the build is successful.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="viewName" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the view that you're using.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="viewPath" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The path that CCNet will check for modifications and use to apply the label.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the current version of the source should be retrieved from ClearCase.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="branch" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the branch that CCNet will monitor for modifications. Note that the config spec of the view being built from must also be set up to reference this branch.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="cvs">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the cvs.exe executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cvsroot" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The cvs connection string. If this is unspecified and your working directory contains a previous checkout, then the CVS client will attempt to determine the correct root based on the CVS folder in your working directory. If the working directory does not contain the source, then this element must be specfied.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="module" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The cvs module to monitor. This element is used both when checking for modifications and when checking out the source into an empty working directory.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder that the source has been checked out into.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether or not the repository should be labelled after a successful build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="restrictLogins" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Only list modifications checked in by specified logins.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="webUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the current version of the source should be retrieved from CVS.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cleanCopy" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether or not a clean copy should be retrieved.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="forceCheckout" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the checkout command should be used instead of update.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="branch" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The branch to check for modifications on.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagPrefix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                By default the CVS tag name used when labelOnSuccess is set to true is ver\-BuildLabel. If you specify this property, the prefix ver\- will be replaced with the value you specify.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="suppressRevisionHeader" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Suppresses headers that do not have revisions within the specified modification window. Setting this option to true will reduce the time that it takes for CCNet to poll CVS for changes. Only fairly recent versions of CVS support this option. Run cvs \-\-help log to see if the \-S option is listed.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="external">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="args" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                A string to be passed to the external source control program in commands.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Should we automatically obtain updated source from the source control system or not?
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="environment" type="EnvironmentVariables" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                A set of environment variables set for commands that are executed.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Name of the source control system executable to run.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                If set, the source repository will be tagged with the build label upon successful builds.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="filtered">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="sourceControlProvider" type="SourceControl" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                This element is used to specify the type of source control provider to retrieve modifications from. With the exception of the element name, the configuration for this element is identical to the xml configuration for the specific source control provider you intend to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="exclusionFilters" type="ModificationFilters" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The list of filters that decide what modifications to exclude.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="inclusionFilters" type="ModificationFilters" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The list of filters that decide what modifications to include.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="filesystem">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="repositoryRoot" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The directory to check for changes. This directory will be checked recursively.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ignoreMissingRoot" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to automatically (recursively) copy the contents of the repositoryRoot directory to the Project Working Directory.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to not fail if the repository doesn't exist.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ftpSourceControl">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="serverName" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the server to connect to.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="userName" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The user name to log in with.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The password for the user.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="useActiveConnectionMode" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to use active connection mode or not.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ftpFolderName" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder name of on the ftp site.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="localFolderName" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder name on the local system.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="recursiveCopy" type="xs:boolean" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to recurse into subfolders or not.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="git">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to fetch the updates from the repository and checkout the branch for a particular build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the Git executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="repository" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The url to the remote repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="branch" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Remote repository branch to monitor and checkout.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagCommitMessage" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Format string for the commit message of each tag. \{0\} is the placeholder for the current build label.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagNameFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Format string for the name of each tag. Make sure you're only using allowed characters. \{0\} is the placeholder for the current build label.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Indicates that the repository should be tagged if the build succeeds.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="commitBuildModifications" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Indicates that all modifications during the build process should be committed before tagging. This requires 'tagOnSuccess ' to be set to 'true'.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="commitUntrackedFiles" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Indicates that files created during the build process should be committed before tagging. This requires 'commitBuildModifications' and 'tagOnSuccess ' to be set to 'true'.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="committerName" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Used to set the "user.name" configuration setting in the local repository. Required for the 'tagOnSuccess ' feature.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="committerEMail" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Used to set the "user.email" configuration setting in the local repository. Required for the 'tagOnSuccess ' feature.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The directory containing the local git repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="hg">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to update the local working copy from the local repository for a particular build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="branch" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Repository branch.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the hg executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="multipleHeadsFail" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Should the build fail if the local repository has multiple heads?
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="repo" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The url for your repository (e.g., http://hgserver/myproject/).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagCommitMessage" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                String format for tags in your repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Indicates that the repository should be tagged if the build succeeds.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The directory containing the locally checked out workspace.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="webUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Generates a web URL.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="mks">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The local path for the MKS source integrity command\-line client (eg. c:\Mks\bin\si.exe).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="user" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                MKS Source Integrity user ID that CCNet should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Password for the MKS Source Integrity user ID.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="checkpointOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to set a checkpoint on success or not.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Instruct CCNet whether or not you want it to automatically retrieve the latest source from the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hostname" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The IP address or machine name of the MKS Source Integrity server.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="port" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The port on the MKS Source Integrity server to connect to.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="sandboxroot" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The local path MKS Source Integrity sandbox root corresponds to.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="sandboxfile" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The project file.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="multi">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="requireChangesFromAll" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                If true, only return a list of modifications if all sourceControl sections return a non\-empty list. Note that this is short\-circuiting, i.e. if the first sourceControl returns an empty list, the next won't be called (this can be useful for situations where you have a slow source control server and you want to check a specific file first as a trigger).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="sourceControls" type="SourceControls" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The list of other Source Control Blocks to include.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="nullSourceControl">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:attribute name="failGetModifications" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Defines whether or not to fail the checking for modifications.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="failLabelSourceControl" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Defines whether or not to fail the labeling.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="failGetSource" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Defines whether or not to fail the getting of the source.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="p4">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the Perforce command line client executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="view" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The perforce 'view' to check for changes. For 'multi\-line' views, use a comma\-separated list. 'Exclusionary' view lines starting with \- cannot be used. Use a [Filtered Source Control Block] to achieve this behaviour. Note that this view is not used for syncing (see below.)
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="client" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The perforce 'client' to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="user" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The perforce user to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The perforce password to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="port" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The perforce hostname and port to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The working directory to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="applyLabel" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to apply a label on a successful build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to automatically 'sync' the latest changes from source control before performing the build. The sync target is the entire view exposed by the specified client \- the view has no effect on sycning.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="forceSync" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                If autoGetSource is set to true, then whether to use the \-f option to sync. See http://www.perforce.com/perforce/doc.042/manuals/cmdref/sync.html for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="p4WebURLFormat" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Creates a link to the P4Web change list page for each detected modification. The specified value is transformed using String.Format where the first argument will be the substituted change list number.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeZoneOffset" type="xs:double" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                How many hours ahead your Perforce Server is from your build server. E.g. if your build server is in London, and your Perforce server is in New York, this value would be '\-5'.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="errorPattern" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The error pattern to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="useExitCode" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to use exit codes.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="acceptableErrors" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The acceptable errors.
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="error" type="String">
                  <xs:annotation>
                    <xs:documentation>
                      An acceptable error.
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="plasticscm">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Should we automatically obtain updated source from PlasticSCM or not?
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Name of the PlasticSCM executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="branch" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The Plastic SCM branch to monitor.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="repository" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The Plastic SCM repository to monitor.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Valid Plastic SCM workspace path.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether or not CCNet should create an Plastic SCM baseline when the build is successful.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelPrefix" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies the prefix label name.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="forced" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Do the update with the "\-\-forced" option.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pvcs">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The PVCS client executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the PVCS project database.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="subproject" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                One ore more projects in PVCS that you wish to monitor. As long as each subproject is separated with a space and a "/", you can monitor more than one subproject at a time.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="username" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Username for the user account to use to connect to PVCS.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Password for the PVCS user account.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingdirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The local directory containing the source from the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workspace" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The workspace to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="recursive" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to monitor all subfolders of the specified subproject.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether or not to apply a label to the repository after each successful build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the CCNet should take responsibility for retrieving the current version of the source from the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="manuallyAdjustForDaylightSavings" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                In PVCS 7.5.1, the client does not automatically adjust dates to accommodate daylight savings time. Setting this flag to true will make CCNet compensate for it.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="labelOrPromotionName" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The label to use as your code\-base. If this is specified, this label will be called to get all code associated with it when a get is done. When the build is successful, the good code will have this base label associated with it in turn promoting it into the label. Label to apply to repository. If a value is specified, labelOnSuccess will automatically be set to true.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="robocopy">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The executable location.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="repositoryRoot" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The repository root.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to automatically get the source.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The working directory to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="additionalArguments" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Any additional arguments.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="starteam">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The local path for the StarTeam command\-line client (eg. c:\starteam\stcmd.exe).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The StarTeam project (and view) to monitor (eg. project/view).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="username" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                StarTeam ID that CCNet should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Password for the StarTeam user ID.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="host" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The IP address or machine name of the StarTeam server.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="port" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The port on the StarTeam server to connect to.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="path" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The path to monitor.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Instruct CCNet whether or not you want it to automatically retrieve the latest source from the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="overrideViewWorkingDir" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Instruct CCNet whether or not you want it to automatically retrieve the latest source from the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="overrideFolderWorkingDir" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                If set, use the \-rp option to use a different View Working Directory.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="folderRegEx" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Allows you to use your own RegEx to parse StarTeam's folder output.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="fileRegEx" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Allows you to use your own RegEx to parse StarTeam's file output.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="fileHistoryRegEx" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Allows you to use your own RegEx to parse StarTeam's file history.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="surround">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="executable" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The local path for the Surround SCM command\-line client (eg. C:\Program Files\Seapine\Surround SCM\sscm.exe).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="branch" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The Surround SCM branch to monitor.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="repository" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The Surround SCM repository to monitor.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="file" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                A filename pattern to match to monitor and retrieve files.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The local path to get files from Surround SCM to.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="serverconnect" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The IP address or machine name and port number of the Surround SCM server.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="serverlogin" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Surround SCM login:password that CCNet should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="searchregexp" type="YesNoValue" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Treat the filename pattern as a regular expression. (Value 1 = true, 0 = false)
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="recursive" type="YesNoValue" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Monitor and retrieve all files in child repositories of the specified repository. (Value 1 = true, 0 = false).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="svn">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="webUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The root url for the WebSVN site.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the svn executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="trunkUrl" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The url for your repository (e.g., svn://svnserver/).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The directory containing the locally checked out workspace.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagOnSuccess" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Indicates that the repository should be tagged if the build succeeds.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="deleteObstructions" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Should any detected obstructions be deleted prior to getting modifications?
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="tagBaseUrl" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The base url for tags in your repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="username" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The username to use for authentication when connecting to the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The password to use for authentication when connecting to the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to retrieve the updates from Subversion for a particular build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="checkExternals" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to check the paths specified in the svn:externals property for modifications.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="checkExternalsRecursive" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to check for modifications of svn:externals recursively.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cleanCopy" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to delete the working copy before updating the source.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="revert" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Reverts any local changes to a file or directory and resolves any conflicted states. svn revert will not only revert the contents of an item in your working copy, but also any property changes. Finally, you can use it to undo any scheduling operations that you may have done (e.g. files scheduled for addition or deletion can be "unscheduled").
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cleanUp" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Recursively clean up the working copy, removing locks resuming unfinished operations. If you ever get a "working copy locked" error, run this command to remove stale locks and get your working copy into a usable state again.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="revisionNumbers" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to use revision numbers for fetching the modifications.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="authCaching" type="AuthCachingMode" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Defines the auth caching mode to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="synergy">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The issue URL builder to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="connection" type="synergyConnection" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Connection info to create a session.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="project" type="synergyProject" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The info for the integration testing project.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="changeSynergy" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The Web Url builder to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="synergyConnection">
    <xs:all>
      <xs:element name="host" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Hostname of the Synergy server
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="database" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Network path to the Synergy database instance
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="polling" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Poll the server every minute when the ccm\_admin has protected the database for the purpose of issuing backup commands.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="role" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The role to use for the Synergy session.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Timeout in seconds for all Synergy commands.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="executable" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The executable filename/path for the CM Synergy command line interface.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to execute all CM Synergy commands from.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="username" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The username for the Synergy session. Can include environmental variables to be replaced.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The Synergy password for the associate  value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="homeDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The full physical path of the home directory for the associated Username on the client machine. Can include environmental variables to be replaced.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clientDatabaseDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Path for the remote client session to copy database information to. Can include environmental variables to be replaced.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="synergyProject">
    <xs:all>
      <xs:element name="release" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The configured Synergy release value for the given project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projectSpecification" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The configured Synergy project specification for all source control operations.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="taskFolder" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The folder specification for the shared folder which will be used to "manually" add successfully integrated tasks added to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseline" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            If true, creates a new baseline for the project configuration after a successful integration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="template" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            If true, resets the reconfigure properties for this project and all subprojects to use the reconfigure template.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reconcile" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            If enabled, updates the work area from the database, discarding all uncontrolled files in the work area and changes to static objects.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="file" type="String">
              <xs:annotation>
                <xs:documentation>
                  The file to reconcile.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="purpose" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Synergy purpose specification for the project and any created baselines.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="vault">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="username" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Vault user id that CCNet should use to authenticate.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Password for the Vault user.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="host" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the Vault server.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="repository" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the Vault repository to monitor. .
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="folder" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The root folder to be monitored by CCNet.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of the Vault command\-line executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ssl" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Should SSL be used to communicate with the Vault server.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies if CCNet should automatically retrieve the latest version of the source from the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="applyLabel" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies if CCNet should apply the build label to the repository.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="historyArgs" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Extra arguments to be included in the history commandline.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="useWorkingDirectory" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                *CC.NET 1.0*: Determines the working directory into which Vault files will be retrieved. Supply true if you want CCNet to use the Vault folder working directory created for the build user using the Vault GUI (recommended). Supply false if CCNet should use the CCNet working directory.   *CC.NET 1.1*: Determines if the source will be retrieved into a Vault Working Folder.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The root folder where the latest source will retrieved from Vault. This path can either be absolute or it can be relative to the CCNet project working directory.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="setFileTime" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The modification date that retrieved source files will have.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cleanCopy" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                If true, the source path will be emptied before retrieving new source.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="proxyServer" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The host name of the HTTP proxy Vault should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="proxyPort" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The port on the HTTP proxy Vault should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="proxyUser" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The user name for the HTTP proxy Vault should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="proxyPassword" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The password for the HTTP proxy Vault should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="proxyDomain" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The Windows domain of the HTTP proxy Vault should use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="otherVaultArguments" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Any other aruuments to pass into the executable.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="pollRetryWait" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The number of seconds to wait between retries when a check for modifications fails.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="pollRetryAttempts" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The number of automatic retries when failing to check for modifications before an exception is thrown.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="vss">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="project" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The project in the repository to be monitored.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="username" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                VSS user ID that CCNet should use to authenticate. If the username is unspecified, the VSS client will attempt to authenticate using the NT user.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Password for the VSS user ID.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="applyLabel" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the current CCNet label should be applied to all source files under the current project in VSS.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the current version of the source should be retrieved from VSS.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="alwaysGetLatest" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Specifies whether the most recent version of the source should be retrieved from VSS. If not, CCNet will obtain the source as of the time the build began.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder into which the source should be retrived from VSS. If this folder does not exist, it will be automatically created.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cleanCopy" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Controls whether or not VSS gets a clean copy (overwrites modified files) when getting the latest source.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The location of SS.EXE. If VSS is installed on the integration server, the location of VSS will be read from the registry and this element may be omitted.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ssdir" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Password for the VSS user ID.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="culture" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The culture under which VSS is running. This value must match the culture of the VSS installation for CCNet to work with VSS. Most of the time the default is OK and you may omit this item. If you are using the US version of VSS on a machine that is not set to the US culture, you should include the configuration block &lt;culture&gt;en\-US&lt;/culture&gt;.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="vsts">
    <xs:complexContent>
      <xs:extension base="SourceControl">
        <xs:all>
          <xs:element name="server" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name or URL of the team foundation server.  For example http://vstsb2:8080 or vstsb2 if it has already been registered on the machine.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The path to the project in source control, for example $\VSTSPlugins
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="applyLabel" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether this repository should be labeled.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="autoGetSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to automatically get the source.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="username" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Username that should be used.  Domain cannot be placed here, rather in domain property.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The password in clear text of the domain user to be used.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="domain" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The domain of the user to be used.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The working directory to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="cleanCopy" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to do a clean copy.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="force" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to force or not.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="deleteWorkspace" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Flag indicating if workspace should be deleted every time or if it should be left (the default).  Leaving the workspace will mean that subsequent gets will only need to transfer the modified files, improving performance considerably.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="issueUrlBuilder" type="IModificationUrlBuilder" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The path to the executable
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="workspace" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Name of the workspace to create.  This will revert to the DEFAULT\_WORKSPACE\_NAME if not passed.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sets the timeout period for the source control operation. See [Timeout Configuration] for details.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The dynamic values to use for the source control block.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="IModificationUrlBuilder" abstract="true"/>

  <xs:complexType name="IModificationUrlBuilders">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="changeSynergy" type="changeSynergy">
        <xs:annotation>
          <xs:documentation>
            A URL builder to link each modification to the ChangeSynergy task details form.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defaultIssueTracker" type="defaultIssueTracker">
        <xs:annotation>
          <xs:documentation>
            It contains the url of the involved project, with the issue number as a parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hgweb" type="hgweb">
        <xs:annotation>
          <xs:documentation>
            Build a Mercurial URL.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="multiIssueTracker" type="multiIssueTracker">
        <xs:annotation>
          <xs:documentation>
            This issue tracker allows a combination of the other issuetrackers.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="regexIssueTracker" type="regexIssueTracker">
        <xs:annotation>
          <xs:documentation>
            This will use regular expressions to convert the comment into an url.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="viewcvs" type="viewcvs">
        <xs:annotation>
          <xs:documentation>
            Generates a URL for ViewCVS.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="websvn" type="websvn">
        <xs:annotation>
          <xs:documentation>
            Generates a URL for WebSVN.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="changeSynergy">
    <xs:complexContent>
      <xs:extension base="IModificationUrlBuilder">
        <xs:all>
          <xs:element name="database" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Network path to the Synergy database instance
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="role" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The role to use for the Synergy session.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The root path to the ChangeSynergy installation.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="username" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The username to use for ChangeSynergy access. Can include environmental variables to be replaced.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="password" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The Synergy password for the associate  value.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="defaultIssueTracker">
    <xs:complexContent>
      <xs:extension base="IModificationUrlBuilder">
        <xs:all>
          <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The base URL to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="hgweb">
    <xs:complexContent>
      <xs:extension base="IModificationUrlBuilder">
        <xs:all>
          <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The base URL to use.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="multiIssueTracker">
    <xs:complexContent>
      <xs:extension base="IModificationUrlBuilder">
        <xs:all>
          <xs:element name="issueTrackers" type="IModificationUrlBuilders" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The issue trackers to combine.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="regexIssueTracker">
    <xs:complexContent>
      <xs:extension base="IModificationUrlBuilder">
        <xs:all>
          <xs:element name="find" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The string to find.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="replace" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The replacement string.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="viewcvs">
    <xs:complexContent>
      <xs:extension base="IModificationUrlBuilder">
        <xs:all>
          <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The base URL.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="websvn">
    <xs:complexContent>
      <xs:extension base="IModificationUrlBuilder">
        <xs:all>
          <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The base URL.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ModificationFilters">
    <xs:choice minOccurs="1"   maxOccurs="unbounded">
      <xs:element name="actionFilter" type="actionFilter">
        <xs:annotation>
          <xs:documentation>
            The ActionFilter can be used to filter modifications on the basis of the type of modification that was committed. Modification types are specific to each source control provider. Consult each source control provider for the list of actions to filter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="commentFilter" type="commentFilter">
        <xs:annotation>
          <xs:documentation>
            A FilteredSourceControl filter that compares modification comments to a specified regular expression.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pathFilter" type="pathFilter">
        <xs:annotation>
          <xs:documentation>
            The PathFilter can be used to filter modifications on the basis of their file path.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userFilter" type="userFilter">
        <xs:annotation>
          <xs:documentation>
            The UserFilter can be used to filter modifications on the basis of the username that committed the changes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="actionFilter">
    <xs:all>
      <xs:element name="actions" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The actions to filter.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="action" type="String">
              <xs:annotation>
                <xs:documentation>
                  An action to filter.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="commentFilter">
    <xs:all>
      <xs:element name="pattern" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            This is the pattern used to compare the modification comment against. The pattern is specified according to the rules of the .net System.Text.RegularExpressions.Regex class. Each CommentFilter contains a single pattern element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="pathFilter">
    <xs:all>
      <xs:element name="pattern" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            This is the pattern used to compare the modification path against. The pattern should match the path of the files in the repository (not the path of the files in the working directory). See below for examples of the syntax for this element. Each PathFilter contains a single pattern element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="caseSensitive" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Sets casesensitive searching on or off.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="userFilter">
    <xs:all>
      <xs:element name="names" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The user names to filter.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="name" type="String">
              <xs:annotation>
                <xs:documentation>
                  The user name to filter.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="Tasks">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="antsPerformance" type="antsPerformance">
        <xs:annotation>
          <xs:documentation>
            Profiles the performance of an application using Reg Gate's ANTS Performance Profiler.
            ANTS Performance Profiler is a tool to profile the performance of an application.
            This application is available from http://www.red\-gate.com/. Pro edition of 1.6 or later is required.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="artifactcleanup" type="artifactcleanup">
        <xs:annotation>
          <xs:documentation>
            The artifact CleanUp publisher allows for automatic removal of the buildlogs according to the choosen setting. It relies on the build log folder, so the XML publisher must be specified before this publisher can run. For technical reasons this publisher MUST reside in the publisher section, it will not work in the tasks section. Be sure to specify the [Xml Log Publisher] before this one.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildpublisher" type="buildpublisher">
        <xs:annotation>
          <xs:documentation>
            The Build Publisher lets you copy any arbitrary files on a  *successful* build.
            You can set alwaysPublish to true, if you want the copy always to happen.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="checkHttpStatus" type="checkHttpStatus">
        <xs:annotation>
          <xs:documentation>
            Sends an HTTP request to the specified URL.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="codeItRight" type="codeItRight">
        <xs:annotation>
          <xs:documentation>
            Perform a code analysis using SubMain.CodeItRight.
            SubMain.CodeItRight is a commerical application that will analyse the code for any standards violations. The tool is available from http://submain.com/products/codeit.right.aspx.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="commentTask" type="commentTask">
        <xs:annotation>
          <xs:documentation>
            Adds a comment to the log.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="conditional" type="conditional">
        <xs:annotation>
          <xs:documentation>
            Checks to see if a condition is true before the contained tasks run.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="conditionalPublisher" type="conditionalPublisher">
        <xs:annotation>
          <xs:documentation>
            A container publisher that only executes the child publishers when the condition (e.g. build status) is met.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cruiseServerControl" type="cruiseServerControl">
        <xs:annotation>
          <xs:documentation>
            Sends a management task to a CruiseControl.NET server.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="devenv" type="devenv">
        <xs:annotation>
          <xs:documentation>
            Most complex build processes use NAnt Task or MSBuild Task to script the build. However, for simple projects that just need to build a Visual Studio.NET solution, the Visual Studio task &lt;devenv&gt; provides an easier method.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dupfinder" type="dupfinder">
        <xs:annotation>
          <xs:documentation>
            Check for duplicates using dupfinder (http://duplicatefinder.codeplex.com/).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="email" type="email">
        <xs:annotation>
          <xs:documentation>
            Publishes results of integrations via email.  This implementation supports plain-text, and Html email formats. Rules regarding who receives email are configurable.
            The email publisher can be used to send email to any number of users. It is common to include one user who gets an email for every build and then also send email to every developer who checked code in for this build.
            People tend to prefer to use CCTray rather than email for instant notification these days.
            Make sure that all of the Merge Publishers, along with the Xml Log Publisher task are done before the &lt;email&gt; publisher, or else you won't be able to include output from the build in the email. A common mistake is to put the email task in the &lt;tasks&gt; section instead of the &lt;publishers&gt; section. If an error occurs in the &lt;tasks&gt; section, the remaining tasks in that section are skipped, and CC.Net goes right to the &lt;publishers&gt; section. So if you put the &lt;email&gt; tasks in the &lt;tasks&gt; section, you'll never get any failure messages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="exec" type="exec">
        <xs:annotation>
          <xs:documentation>
            The Executable Task lets you invoke any command line executable. It doesn't offer as much specific integration as (for example) the NAnt Task, but does allow you to hook almost anything up as a build process to CCNet. CCNet will examine the exit code when the executable ends and act accordingly.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FinalBuilder" type="FinalBuilder">
        <xs:annotation>
          <xs:documentation>
            The FinalBuilder Task allows you to invoke FinalBuilder build projects as part of a CruiseControl.NET integration project. FinalBuilder is a commercial build and release management solution for Windows software developers and SCM professionals, developed and marketed by VSoft Technologies (http://www.finalbuilder.com/finalbuilder.aspx).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forcebuild" type="forcebuild">
        <xs:annotation>
          <xs:documentation>
            The ForceBuildPublisher forces a build on a local or remote build server. It uses .NET Remoting to invoke a forced build on the CruiseControl.NET server at the specified URI.
            The forced build runs asynchronously, i.e. the ForceBuildPublisher does not wait for the forced build to finish. The ForceBuildPublisher is a great way to help Splitting the build.
            An alternative to the ForceBuildPublisher is the Project Trigger. The main difference is that the ForceBuildPublisher is placed in the configuration for the primary project, while the ProjectTrigger is is placed in the configuration for the dependent project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ftp" type="ftp">
        <xs:annotation>
          <xs:documentation>
            The ftp task/publisher allows to download or upload files/ folders, for example, uploading a new version of a web page to ftp site of an ISP.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="gendarme" type="gendarme">
        <xs:annotation>
          <xs:documentation>
            Gendarme is a extensible rule-based tool to find problems in .NET applications and libraries. Gendarme inspects programs and libraries that contain code in ECMA CIL format (Mono and .NET) and looks for common problems with the code, problems that compiler do not typically check or have not historically checked. Website: http://mono-project.com/Gendarme
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="merge" type="merge">
        <xs:annotation>
          <xs:documentation>
            Merges external files into the build log.
            Most build processes interact with external tools that write their output to file (e.g. NUnit, FxCop, or NCover). To make the output of these tools available to CruiseControl.NET to be used in the build process or displayed in the CruiseControl.NET web page or included in CruiseControl.NET emails, these files need to be merged into the CruiseControl.NET integration.
            You should place your File Merge Tasks in the &lt;publishers /&gt; section of your [Project Configuration Block] before your Xml Log Publisher.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modificationHistory" type="modificationHistory">
        <xs:annotation>
          <xs:documentation>
            This publisher logs all modifications for each build in a file.
            These modifications can be viewed in the Dashboard with the [modificationHistoryProjectPlugin] plugin enabled.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modificationReader" type="modificationReader">
        <xs:annotation>
          <xs:documentation>
            This tasks makes it possible to read back modifications made by the Modification Writer Task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modificationWriter" type="modificationWriter">
        <xs:annotation>
          <xs:documentation>
            This task writes the detected modifications for the current integration to a file as XML. This enables the modifications to be used by external programs, such as within a NAnt build script.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="msbuild" type="msbuild">
        <xs:annotation>
          <xs:documentation>
            The &lt;msbuild&gt; task is used to execute MsBuild projects, which are the default project format for Visual Studio 2005 projects and can also be compiled by using the MSBuild application that ships with the .NET 2 Framework.
            In order to work with the results of MsBuild it is important to use a custom xml logger to format the build results.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nant" type="nant">
        <xs:annotation>
          <xs:documentation>
            Runs a NAnt script.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ncoverProfile" type="ncoverProfile">
        <xs:annotation>
          <xs:documentation>
            Perform a code coverage profile using NCover.
            NCover is a commerical application that will profile code while unit tests are running. The tool is available from http://www.ncover.com/.
            CruiseControl.NET only supports NCover 3.x currently.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ncoverReport" type="ncoverReport">
        <xs:annotation>
          <xs:documentation>
            Generate a code coverage report using NCover.
            NCover is a commerical application that will profile code while unit tests are running. The tool is available from http://www.ncover.com/.
            CruiseControl.NET only supports NCover 3.x currently.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ndepend" type="ndepend">
        <xs:annotation>
          <xs:documentation>
            Runs an NDepend analysis.
            NDepend is a tool that simplifies managing a complex .NET code base. Architects and developers can analyze code structure, specify design rules, plan massive refactoring, do effective code reviews and master evolution by comparing different versions of the code.
            This application is available from www.ndepend.com. There is both an open source/academic/evaluation version and a professional version.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nullTask" type="nullTask">
        <xs:annotation>
          <xs:documentation>
            The Null Task is a task that doesn't do anything - it simply returns successfully. This is useful for projects that simply monitor the source control system for changes but don't need to do anything.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nunit" type="nunit">
        <xs:annotation>
          <xs:documentation>
            This task enables you to instruct CCNet to run the unit tests contained within a collection of assemblies. The results of the unit tests will be automatically included in the CCNet build results. This can be useful if you have some unit tests that you want to run as part of the integration process, but you don't need as part of your developer build process. For example, if you have a set of integration tests that you want to run in a separate build process, it is easy to set up a project to use this task.
            If you are using the Visual Studio Task and you want to run unit tests then you probably want to use this task. Alternatively you can run NUnit using post-build tasks in your Visual Studio project properties.
            We recommend not using this task, and using your builder to run your tests if possible. This way if the tests fail and you don't know why, it is a lot easier to try and replicate the problem on another machine.
            When using this task,do NOT merge an xml file from bin folder of your app with the merge task, or the results will be save twice in the buildlog file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="package" type="package">
        <xs:annotation>
          <xs:documentation>
            Generates a ZIP file package containing the specified files.
            This will generate a "package" of files in a compressed format. The files must be specified, plus an optional manifest can be included.
            This publisher also allows the generation of a "manifest" to include in the package. A manifest contains additional details on the package, both at a general level and at a file level.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parallel" type="parallel">
        <xs:annotation>
          <xs:documentation>
            Runs a set of child tasks in parallel. Each task will run at the same time as the other tasks.
            To run a set of tasks in sequential order within this task, use the Sequential Task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="powershell" type="powershell">
        <xs:annotation>
          <xs:documentation>
            Runs a PowerShell script.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rake" type="rake">
        <xs:annotation>
          <xs:documentation>
            Executes Rake.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rss" type="rss">
        <xs:annotation>
          <xs:documentation>
            This publisher generates an RSS file reporting the latest results for a Project.
            The RSS feed is available via the Dasboard in the Project Report. There needs to be 1 build done with this publisher for the icon to show up.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sequential" type="sequential">
        <xs:annotation>
          <xs:documentation>
            Runs a set of child tasks in order. This task is primarily designed for scenarios where execution can take more than more path (e.g. Parallel Task). This is normally not required for tasks directly under the prebuild, tasks or publishers element in a project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statistics" type="statistics">
        <xs:annotation>
          <xs:documentation>
            The publisher can be used to collect and update statistics for each build in a file. Some of the statistics which would be collected are build durations and test count. At the minimal, the publisher can be configured with just an empty &lt;statistics /&gt; element in the publishers section. This would pick up some default statistics for capturing during the build process.
            Statistics publisher must come after any File Merge tasks in the publishers section, in case you want to collect statistics from merged files.
            The task will generate a statistics.csv and report.xml file in the artifact directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="synchronised" type="synchronised">
        <xs:annotation>
          <xs:documentation>
            A sychronisation context across multiple tasks or projects.
            Only one task can be in a synchronisation context at any time. This provides a mechanism for locking, either within a project or inbetween projects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xmllogger" type="xmllogger">
        <xs:annotation>
          <xs:documentation>
            The Xml Log Publisher is used to create the log files used by the CruiseControl.NET Web Dashboard, so if you don't define an &lt;xmllogger /&gt; section the Dashboard will not function correctly.
            You should place the &lt;xmllogger /&gt; in the &lt;publishers /&gt; section, after any File Merge Tasks, in your Project Configuration Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="antsPerformance">
    <xs:all>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The executable to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="app" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The application to profile.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appArgs" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The arguments to pass to the application.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="priority" type="ProcessPriorityClass" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The priority class of the spawned process.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time\-out period in seconds for the entire task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profilerTimeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time\-out period in seconds for the profiler.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="quiet" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to disable all output or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="verbose" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to display verbose output or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="overwrite" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to overwrite any existing files or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="subProcesses" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to include sub\-processes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="level" type="AntsTraceLevel" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The level to trace at.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="methodLevel" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Perform method level profiling.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="onlyWithSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Only profile methods that have source code.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="useSampling" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to use sampling for generating approximate results quickly.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeSource" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to include source code in the results.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="inlining" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to allow .NET to inline functions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="compensate" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to get the profiler to compensate for its own overhead.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="simplify" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to simplify certain complicated stack traces.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avoidTrivial" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to avoid trivial functions or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sqlIO" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to try to record SQL and File I/O events.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The base directory to use. If omitted this will default to the working directory of the project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xmlArgs" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A file containing the args for the profiler in an XML specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="summaryScv" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the summary file to \- uses CSV format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="summaryXml" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the summary file to \- uses XML format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="summaryHtml" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the summary file to \- uses HTML format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="callTreeXml" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the calltree file to \- uses XML format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="callTreeHtml" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the calltree file to \- uses HTML format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="data" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the data file to (requires desktop application to view).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="output" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The output analysis file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="threshold" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The threshold level.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="artifactcleanup">
    <xs:all>
      <xs:element name="cleanUpMethod" type="CleanUpMethod" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Defines the procedure to use for cleaning up the artifact folder.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cleanUpValue" type="xs:nonNegativeInteger" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Defines the value for the cleanup procedure.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="buildpublisher">
    <xs:all>
      <xs:element name="publishDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to copy the files to. This path can be absolute or can be relative to the project's artifact directory. If  *useLabelSubDirectory* is true (default) a subdirectory with the current build's label will be created, and the contents of sourceDir will be copied to it. If unspecified, the project's artifact directory will be used as the publish directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourceDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The source directory to copy files from. This path can be absolute or can be relative to the project's working directory. If unspecified, the project's working directory will be used as the source directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="useLabelSubDirectory" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            If set to true (the default value), files will be copied to subdirectory under the publishDir which will be named with the label for the current integration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alwaysPublish" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Always copies the files, regardless of the state of the build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cleanPublishDirPriorToCopy" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Cleans the publishDir if it exists, so that you will always have an exact copy of the sourceDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cleanUpMethod" type="CleanupPolicy" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Defines a way to clean up published builds.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cleanUpValue" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The value used for the cleaning method.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="checkHttpStatus">
    <xs:all>
      <xs:element name="successStatusCodes" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The list of exit codes that indicate success, separated by commas.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="httpRequest" type="httpRequest" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The request settings.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="retries" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The number of retries to allow.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeContent" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to include the content of the call in the log.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="taskTimeout" type="Timeout" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The timeout period to allow.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="retryDelay" type="Timeout" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Gets or sets the retry delay.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="codeItRight">
    <xs:all>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The executable to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="solution" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The solution to analyse.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="project" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The project to analyse.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xsl" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the XSL file to override the default XSL.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="crData" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the CodeIt.Right .crdata file. When specified, CodeItRight.Cmd will use the exclusion list (violations, rules and files) saved using the Visual Studio version of CodeIt.Right.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the User Profile that defines active rule set for the analysis. When omitted, the built\-in profile is used.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reportingThreshold" type="Severity" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Severity Threshold value to limit the output violation set. When omitted, the the lowest Severity is used \- None.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="failureThreshold" type="Severity" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Severity value to fail the build on. When omitted, the the lowest Severity is used \- None.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time\-out period in seconds. If the task does no finish running in this time it will be terminated.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="priority" type="ProcessPriorityClass" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The priority class of the spawned process.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="commentTask">
    <xs:all>
      <xs:element name="message" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The message to add to the log.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="failure" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Defines whether to fail the task or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="conditional">
    <xs:all>
      <xs:element name="conditions" type="TaskConditions" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Gets or sets the task conditions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tasks" type="Tasks" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Gets or sets the tasks to run if conditions evaluates to true.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="elseTasks" type="Tasks" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Gets or sets the tasks to run if conditions evaluates to false.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="conditionalPublisher">
    <xs:all>
      <xs:element name="publishers" type="Tasks" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The publishers to run if the conditions are met.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="conditions" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A list of conditions of which at least one must be met in order to run the publishers.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="condition" type="IntegrationStatus">
              <xs:annotation>
                <xs:documentation>
                  A condition to meet.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="cruiseServerControl">
    <xs:all>
      <xs:element name="server" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The server to send the commands to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="actions" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The actions to perform.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="controlAction" type="controlAction">
              <xs:annotation>
                <xs:documentation>
                  An action to perform on a CruiseControl.NET server.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="devenv">
    <xs:all>
      <xs:element name="solutionfile" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The path of the solution file to build. If relative, it is relative to the Project Working Directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="configuration" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The solution configuration to use (not case sensitive).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildTimeoutSeconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Number of seconds to wait before assuming that the process has hung and should be killed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildtype" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="project" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A specific project in the solution, if you only want to build one project (not case sensitive).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="version" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The version of Visual Studio.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The path to devenv.com.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="dupfinder">
    <xs:all>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The executable to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="inputDir" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The input directory to scan. If relative, this will be relative to the project working directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fileMask" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The file mask to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="focus" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the file to focus on.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time-out period in seconds.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="threshold" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The threshold is the number of consecutive lines that have to be the same before it is considered a duplicate.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="width" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The first line of a duplicate must contain at least this many non-white-space characters.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recurse" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            To find files that match the filemask in current directory and subdirectories.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="shortenNames" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to shorten filenames.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeCode" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to include the code that has been duplicated.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludeLines" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The lines to exclude.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="line" type="String">
              <xs:annotation>
                <xs:documentation>
                  The line to exclude.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="excludeFiles" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The files to exclude.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="file" type="String">
              <xs:annotation>
                <xs:documentation>
                  The name of the file.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="email">
    <xs:all>
      <xs:element name="mailhost" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The SMTP server that CruiseControl.NET will connect to to send email.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mailport" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The SMTP server port number.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mailhostUsername" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The user name to provide to the SMTP server.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mailhostPassword" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The password to provide to the SMTP server.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="from" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The e-mail address that email will be marked as coming from.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="useSSL" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to use SSL or not for sending the e-mail.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="replyto" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The e-mail address to use for replies.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xslFiles" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A list of xsl files that will be used to fill up the message body, if left blank the list will be taken from ccnet.exe.config or ccservice.exe.config.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="xslFile" type="String">
              <xs:annotation>
                <xs:documentation>
                  The XSL file to use.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="attachments" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A list of files to attach to the e-mail. If the full path is not specified, then it will be relative to the project working directory.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="attachment" type="String">
              <xs:annotation>
                <xs:documentation>
                  The attachment to send.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="includeDetails" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to send a full report or not. If not, just sends a simple status message with a link to the build report.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modifierNotificationTypes" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of &lt;NotificationType&gt; elements, specifying build states for which CruiseControl.Net should send an email to the comitters of the build.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="notificationType" type="NotificationType">
              <xs:annotation>
                <xs:documentation>
                  The notification type.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="users" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of &lt;user&gt; elements that define who to send emails to.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="user" type="user">
              <xs:annotation>
                <xs:documentation>
                  Defines a user who will receive e-mails.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="groups" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of &lt;group&gt; elements that identify which the notification policy for a set of users.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="group" type="group">
              <xs:annotation>
                <xs:documentation>
                  Defines a group of users to receive e-mails.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="subjectSettings" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of &lt;subject&gt; elements that define the subject of the email, according to the state of the build (broken, fixed, ...)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="subject" type="subject">
              <xs:annotation>
                <xs:documentation>
                  This element  allows to set specific subject messages according to the state of the build. When a certain state is not specified, a default will be entered.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="converters" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of elements containing rules for creating email adresses based on the modifiers name. The converters will be used when the name of the modifier is not set in the users section.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="ldapConverter" type="ldapConverter">
              <xs:annotation>
                <xs:documentation>
                  Looks up the email address via LDAP.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="regexConverter" type="regexConverter">
              <xs:annotation>
                <xs:documentation>
                  Matches the username against a regular expression pattern and modifies it according to a specified replacement. Uses the .NET regular expression language.
                  The find attribute contains a regular expression that is matched against the source control userid. The replace attribute contains a replacement expression that is used to modify the address. Example : Appending "@TheCompany.com" to the username
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="subjectPrefix" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A string that will be the first string of the subject.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="exec">
    <xs:all>
      <xs:element name="executable" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The path of the program to run. If this is relative, then must be relative to either (a) the base directory, (b) the CCNet Server application, or (c) if the path doesn't contain any directory details then can be available in the system or application's 'path' environment variable.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to run the process in. If relative, is a subdirectory of the Project Working Directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildArgs" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Any command line arguments to pass in.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="environment" type="EnvironmentVariables" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of environment variables set for commands that are executed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildTimeoutSeconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Number of seconds to wait before assuming that the process has hung and should be killed.  If the build process takes longer than this period, it will be killed.  Specify this value as zero to disable process timeouts.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="successExitCodes" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The list of exit codes that indicate success, separated by commas.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="FinalBuilder">
    <xs:all>
      <xs:element name="ProjectFile" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The full path of the FinalBuilder project to run.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ShowBanner" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Specify 'true' to enable the "banner" at the top of the FinalBuilder console output.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FBVariables" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            One or more FBVariable elements to pass to FinalBuilder.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="FBVariable">
              <xs:annotation>
                <xs:documentation>
                  The variable to pass.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="name" type="String" use="required">
                  <xs:annotation>
                    <xs:documentation>
                      The name of the variable.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="value" type="String" use="required">
                  <xs:annotation>
                    <xs:documentation>
                      The value for the variable.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="DontWriteToLog" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Disable output to the FinalBuilder project log file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UseTemporaryLogFile" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Log to a temporary log file which is deleted when the project closes. Overrides DontWriteToLog.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The number of seconds to wait before assuming that the FinalBuilder project has hung and should be killed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FBVersion" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Use this element to explicitly specify a version of FinalBuilder to run (for instance, you could force a FinalBuilder 4 project to run in FinalBuilder 5.)
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FBCMDPath" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The absolute path to FBCMD.EXE.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="forcebuild">
    <xs:all>
      <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The CCNet project to force build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serverUri" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The URI for the local or remote server managing the project to build. The default value is the default URI for the local build server.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="integrationStatus" type="IntegrationStatus" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The condition determining whether or not the remoting call should be made. The default value is "Success" indicating that the specified build will be forced if the current build was successful
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="enforcerName" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Identification of a ForceBuildPublisher. This value is passed to the CCNetRequestSource attribute of the forced  project's build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="security" type="NameValuePairs" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The security credentials to pass through to the remote server.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parameters" type="NameValuePairs" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The parameters to pass to the remote project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="ftp">
    <xs:all>
      <xs:element name="serverName" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the server to connect to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The username to log in with.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="password" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The password to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="useActiveConnectionMode" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to use active connection mode or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="action" type="FtpAction" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The action to perform.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ftpFolderName" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The path to the folder to use on the FTP server.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="localFolderName" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The to the folder to use on the local machine.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recursiveCopy" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to perform a recursive copy or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="gendarme">
    <xs:all>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location of the Gendarme executable.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to run Gendarme in.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="configFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Specify the configuration file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ruleSet" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Specify the set of rules to verify.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ignoreFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Do not report the known defects that are part of the specified file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="limit" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Stop reporting after N defects are found.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="severity" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Filter the reported defects to include the specified severity levels.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="confidence" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Filter the reported defects to include the specified confidence levels.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="quiet" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            If true, display minimal output (results) from the runner.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="verbose" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Enable debugging output.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="failBuildOnFoundDefects" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Specify whenver the build should fail if some defects are found by Gendarme.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="assemblies" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Specify the assemblies to verify. You can specify multiple filenames, including masks (? and \*).
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="assemblyMatch">
              <xs:annotation>
                <xs:documentation>
                  An assembly match.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all>
                  <xs:element name="expr" type="String">
                    <xs:annotation>
                      <xs:documentation>
                        The name expression of the assembly, e.g. "*.dll". Masks (? and *) are allowed.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:all>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="assemblyListFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Specify a file that contains the assemblies to verify. You can specify multiple filenames, including masks (? and \*), one by line.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="verifyTimeoutSeconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum number of seconds that the build may take.  If the build process takes longer than this period, it will be killed.  Specify this value as zero to disable process timeouts.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="merge">
    <xs:all>
      <xs:element name="files" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The files to merge.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="file" type="MergeFileInfo">
              <xs:annotation>
                <xs:documentation>
                  The file to merge.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="target" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The folder to copy the files to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="modificationHistory">
    <xs:all>
      <xs:element name="onlyLogWhenChangesFound" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            When true, the history file will only be updated when the build contains modifications. This setting is mainly for keeping the file small when there are a lot builds without modifications. For example: like CCNet, there is a public website where everybody can force a build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="modificationReader">
    <xs:all>
      <xs:element name="filename" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The filename pattern for the file containing the modifications. CCnet with search in the path for files starting with this filename, and having the same extention. For example when filename is set to modifications.xml, ccnet will search for files like so: modifications\*.xml
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="path" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to search the xml file(s) in.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deleteAfterRead" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Delete the files after they have been read.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="modificationWriter">
    <xs:all>
      <xs:element name="filename" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The filename for the file containing the modifications.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="path" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to write the xml file to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appendTimeStamp" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Appends the integration start time to the filename, just before the extention. Making it possible to create a modification file per integration, without overwriting existing ones. Intended to be used with the [Modification Reader Task].
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="msbuild">
    <xs:all>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location of the MSBuild.exe executable.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="workingDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to run MSBuild in - this is generally the directory containing your build project. If relative, is a subdirectory of the Project Working Directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projectFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the build project to run, relative to the workingDirectory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildArgs" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Any extra arguments to pass through to MSBuild.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targets" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A semicolon-separated list of the targets to run.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="logger" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The full path to the assembly containing the custom logger to use. Arguments can be passed to the logger by appending them after the logger name separated by a semicolon. Only if the assembly contains more than one logger implementation you need to specify the logger class (see MSBuild reference): [LoggerClass,]LoggerAssembly[;LoggerParameters]
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Number of seconds to wait before assuming that the process has hung and should be killed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="nant">
    <xs:all>
      <xs:element name="targetList" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A list of targets to be called. CruiseControl.NET does not call NAnt once for each target, it uses the NAnt feature of being able to specify multiple targets.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="target" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  The name of the target.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The path of the version of nant.exe you want to run. If this is relative, then must be relative to either (a) the base directory, (b) the CCNet Server application, or (c) if the path doesn't contain any directory details then can be available in the system or application's 'path' environment variable
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the build file to run, relative to the baseDirectory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to run the NAnt process in. If relative, is a subdirectory of the Project Working Directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildArgs" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Any arguments to pass through to NAnt (e.g to specify build properties).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="logger" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The NAnt logger to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="listener" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The NAnt listener to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nologo" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to use the -nologo argument when calling NAnt.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildTimeoutSeconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum number of seconds that the build may take.  If the build process takes longer than this period, it will be killed. Specify this value as zero to disable process timeouts.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="ncoverProfile">
    <xs:all>
      <xs:element name="program" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The program to execute and collect coverage stats from.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="testProject" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The project that contains the tests. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="programParameters" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The parameters to pass to the program.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The executable to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time-out period in seconds. If the task does no finish running in this time it will be terminated.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The base directory to use. All relative parameters will be relative to this parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="workingDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The working directory to use. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="publish" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to publish the output files or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="logFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location of the NCover log file. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="logLevel" type="NCoverLogLevel" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The profiler log level.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projectName" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the project (used in the HTML report).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="coverageFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the coverage file to. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="coverageMetric" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The coverage metric to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedAttributes" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The attributes to exclude.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedAssemblies" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The assemblies to exclude.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedFiles" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The files to exclude.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedMethods" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The methods to exclude.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedTypes" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The types to exclude.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedAttributes" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The attributes to include.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedAssemblies" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The assemblies to include.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedFiles" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The files to include.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includedTypes" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The types to include.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disableAutoexclusion" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to turn off autoexclusion or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="processModule" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The module to process.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="symbolSearch" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The symbol search policy to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="trendFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to write the trend file to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildId" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A custom build id to attach.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="settingsFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to read the settings from. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="register" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Temporarily enable NCover.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationLoadWait" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The amount of time that NCover will wait for the application to start up.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="iis" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to cover IIS or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serviceTimeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The timeout period for covering a service.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="windowsService" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The windows service to cover.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="ncoverReport">
    <xs:all>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The executable to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time-out period in seconds. If the task does no finish running in this time it will be terminated.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The base directory to use. All relative parameters will be relative to this parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="workingDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The working directory for the executable. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="coverageFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to read the coverage date from. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clearFilters" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should the coverage filters be cleared.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filters" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The filters to apply.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="coverageFilter" type="coverageFilter">
              <xs:annotation>
                <xs:documentation>
                  A filter for a coverage report.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="minimumThresholds" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The minimum coverage thresholds.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="coverageThreshold" type="coverageThreshold">
              <xs:annotation>
                <xs:documentation>
                  A threshold for a coverage report.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="minimumCoverage" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to use minimum coverage or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xmlReportFilter" type="NCoverReportFilter" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of report filtering to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="satisfactory" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The satisfactory coverage thresholds.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="coverageThreshold" type="coverageThreshold">
              <xs:annotation>
                <xs:documentation>
                  A threshold for a coverage report.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="numberToReport" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum number of items to report.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="trendOutput" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The file to append the trend to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="trendInput" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The file to import the trend from.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildId" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A custom build id to attach.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hide" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The elements to hide.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to output the reports to. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reports" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of report to generate.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="report" type="NCoverReportType">
              <xs:annotation>
                <xs:documentation>
                  The type of report.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="projectName" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The project name to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sortBy" type="NCoverSortBy" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The sort order to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uncoveredAmount" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The amount of uncovered items to cover.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mergeMode" type="NCoverMergeMode" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The merge mode to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mergeFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The file to store the merged data in. If relative, this will be relative to baseDir.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="ndepend">
    <xs:all>
      <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The NDepend project file. This is generated from VisualNDepend.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The executable to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="emitXml" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to emit the XML report data or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The output directory to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="inputDirs" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The input directories to use.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="inputDir" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  The input directory.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="silent" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to hide any output or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reportXslt" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location of a custom report XSL-T.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time-out period in seconds.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The base directory to use. If omitted this will default to the working directory of the project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="publish" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to publish the output files or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="nullTask">
    <xs:all>
      <xs:element name="simulateFailure" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Defines whether to fail the task or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="nunit">
    <xs:all>
      <xs:element name="assemblies" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            List of the paths to the assemblies containing the NUnit tests to be run.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="assembly" type="String">
              <xs:annotation>
                <xs:documentation>
                  The assembly to test.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="path" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Path of  *nunit-console.exe* application.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputfile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The file that NUnit will write the test results to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The number of seconds that the nunit process will run before timing out.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="excludedCategories" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            List of the test categories to be excluded from the NUnit run. The tests need to have the CategoryAttribute set.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="category" type="String">
              <xs:annotation>
                <xs:documentation>
                  The category to exclude.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="includedCategories" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            List of the test categories to be included in the NUnit run. The tests need to have the CategoryAttribute set.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="category" type="String">
              <xs:annotation>
                <xs:documentation>
                  The category to exclude.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="package">
    <xs:all>
      <xs:element name="name" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the package file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="compression" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The level of compression to use. The valid range is from zero to nine, zero is no compression and nine is maximum compression.
          </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="9" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="always" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether the package should always be generated or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="flatten" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should the file structure be flattened or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="manifest" type="ManifestGenerator" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The manifest generator to be used.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="packageList" type="PackageItems" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The list of files and folders to include in the package.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The location to output the package to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="environment" type="EnvironmentVariables" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A set of environment variables set for commands that are executed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="PackageItems">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="packageFile" type="packageFile">
        <xs:annotation>
          <xs:documentation>
            Includes the file in the package.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="packageFolder" type="packageFolder">
        <xs:annotation>
          <xs:documentation>
            Includes the folder and its contents into the package.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="packageFile">
    <xs:all>
      <xs:element name="sourceFile" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name and path of the file to store into the package
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetFileName" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the file that is to be saved.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetFolder" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the folder in the package that the file will be saved under
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="packageFolder">
    <xs:all>
      <xs:element name="sourceFolder" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the folder to store into the package
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fileFilter" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The filename filter to apply
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetFolder" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the folder in the package that the file will be saved under
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeSubFolders" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Recursively save files
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="flatten" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Flatten the hierachy
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="parallel">
    <xs:all>
      <xs:element name="tasks" type="Tasks" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The tasks to run in parallel.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="powershell">
    <xs:all>
      <xs:element name="script" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The PowerShell script to run.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="scriptsDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory that the PowerShell scripts are stored in.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildArgs" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Any arguments to pass into the script.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="environment" type="EnvironmentVariables" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Any environment variables to pass into the script.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildTimeoutSeconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The maximum number of seconds the build can take. If the build process takes longer than this period, it will be killed.  Specify this value as zero to disable process timeouts.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The PowerShell executable.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="successExitCodes" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The exit codes that mark the script as being successful.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="rake">
    <xs:all>
      <xs:element name="buildArgs" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Any arguments to pass through to Rake (e.g to specify build properties).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="baseDirectory" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to run the Rake process in. If relative, is a subdirectory of the Project Working Directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildTimeoutSeconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Number of seconds to wait before assuming that the process has hung and should be killed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="quiet" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Do not log messages to standard output.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="executable" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The path of the version of Rake you want to run. If this is relative, then must be relative to either (a) the base directory, (b) the CCNet Server application, or (c) if the path doesn't contain any directory details then can be available in the system or application's 'path' environment variable.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rakefile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the Rakefile to run, relative to the baseDirectory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="silent" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Like quiet but also suppresses the 'in directory' announcement.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetList" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A list of targets to be called. CruiseControl.NET does not call Rake once for each target, it uses the Rake feature of being able to specify multiple targets.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="target" type="String">
              <xs:annotation>
                <xs:documentation>The name of the target.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="trace" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Turns on invoke/execute tracing and enables full backtrace.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="rss">
    <xs:all>
      <xs:element name="items" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The number of items to be displayed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="sequential">
    <xs:all>
      <xs:element name="tasks" type="Tasks" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The tasks to run in sequence.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="continueOnFailure" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should the tasks continue to run, even if there is a failure?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="statistics">
    <xs:all>
      <xs:element name="statisticList" type="Statistics" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The list of statistics to be included in the build.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="synchronised">
    <xs:all>
      <xs:element name="tasks" type="Tasks" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The tasks to run within the synchronisation context. These tasks will be run in the order they are defined.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="continueOnFailure" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should the tasks continue to run, even if there is a failure?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="context" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the synchronisation context. This is only needed if multiple synchronisation contexts are desired.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The timeout period (in seconds).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="xmllogger">
    <xs:all>
      <xs:element name="logDir" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The directory to save log files to. If relative, then relative to the Project Artifact Directory.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dynamicValues" type="DynamicValues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The dynamic values to use for the task.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Description used for the visualisation of the buildstage, if left empty the process name will be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="TaskConditions">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="andCondition" type="andCondition">
        <xs:annotation>
          <xs:documentation>
            Checks that all the child condition pass.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildCondition" type="buildCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if the current build condition matches a value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="compareCondition" type="compareCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if two values are the same.
            This is typically used with dynamic values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fileExistsCondition" type="fileExistsCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if a file exists.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="folderExistsCondition" type="folderExistsCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if a folder exists.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastBuildTimeCondition" type="lastBuildTimeCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if the last build was at least a certain time period ago.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastStatusCondition" type="lastStatusCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if the status of the last build matches a value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="orCondition" type="orCondition">
        <xs:annotation>
          <xs:documentation>
            Checks that at least one child condition matches.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statusCondition" type="statusCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if the current status matches a status.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="urlHeaderValueCondition" type="urlHeaderValueCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if a URL returns a specified header.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="urlPingCondition" type="urlPingCondition">
        <xs:annotation>
          <xs:documentation>
            Checks if a URL can be pinged.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="andCondition">
    <xs:all>
      <xs:element name="conditions" type="TaskConditions" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The conditions to check.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="buildCondition">
    <xs:all>
      <xs:element name="value" type="BuildCondition" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The build condition to match.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="compareCondition">
    <xs:all>
      <xs:element name="value1" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The first value to evaluate.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value2" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The second value to evaluate.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="evaluation" type="Evaluations" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of evaluation.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ignoreCase" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to ignore any case differences or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="fileExistsCondition">
    <xs:all>
      <xs:element name="file" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The file to check for.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="folderExistsCondition">
    <xs:all>
      <xs:element name="folder" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The folder to check for.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="lastBuildTimeCondition">
    <xs:all>
      <xs:element name="time" type="Timeout" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The time period to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="lastStatusCondition">
    <xs:all>
      <xs:element name="value" type="IntegrationStatus" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The status to match.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="orCondition">
    <xs:all>
      <xs:element name="conditions" type="TaskConditions" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The conditions to check.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="statusCondition">
    <xs:all>
      <xs:element name="value" type="IntegrationStatus" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The status to match.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="urlHeaderValueCondition">
    <xs:all>
      <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The URL to ping.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="key" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The key of the header to check.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The expected value for the header.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="urlPingCondition">
    <xs:all>
      <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The URL to ping.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A description of the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="stateManager" abstract="true" />

  <xs:complexType name="state">
    <xs:complexContent>
      <xs:extension base="stateManager">
        <xs:all>
          <xs:element name="directory" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The directory to save the state file to.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dataStore" abstract="true" />

  <xs:complexType name="xmlFolderData">
    <xs:complexContent>
      <xs:extension base="dataStore">
        <xs:all>
          <xs:element name="base" type="xs:string" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder to store the XML in.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="snapshot" type="xs:string" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder to store snapshots.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="jsonFolderData">
    <xs:complexContent>
      <xs:extension base="dataStore">
        <xs:all>
          <xs:element name="base" type="xs:string" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder to store the JSON in.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="snapshot" type="xs:string" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The folder to store snapshots.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Triggers">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="filterTrigger" type="filterTrigger">
        <xs:annotation>
          <xs:documentation>
            The Filter Trigger allows you to prevent builds from occurring at certain times or on certain days (such as when your source control repository is undergoing backup). It is used to decorate an existing trigger. For example, if you have set up a [Interval Trigger] to cause a new build every 5 minutes, you can use the Filter Trigger to create a window during which the build will not run. The filter will exclude modifications that occur between the start time and the end time on the days specified. If the start time is greater than the end time then the filtered time will span across midnight. For example, if the start time is 23:00 and the end time is 3:00 then builds will be suppressed from 23:00-23:59 and 0:00-3:00 on the days specified.
            Like all triggers, the scheduleTrigger must be enclosed within a triggers element in the appropriate [Project Configuration Block].
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="intervalTrigger" type="intervalTrigger">
        <xs:annotation>
          <xs:documentation>
            The Interval Trigger is used to specify that an integration should be run periodically, after a certain amount of time. By default, an integration will only be triggered if modifications have been detected since the last integration. The trigger can also be configured to force a build even if no changes have occurred to source control. The items to watch for modifications are specified with Source Control Blocks.
            Like all triggers, the intervalTrigger must be enclosed within a triggers element in the appropriate Project Configuration Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="multiTrigger" type="multiTrigger">
        <xs:annotation>
          <xs:documentation>
            The Multiple Trigger is used to support the execution of multiple nested triggers. Each trigger will be executed sequentially in the order specified in the configuration file. By default, if any of the triggers specify that a build should occur then a build will be triggered. The build condition will be ForceBuild if any trigger returns a ForceBuild condition. Otherwise, the build condition will be IfModificationsExist if any trigger returns that condition. Multiple Triggers can contain nested multiple triggers.
            It is possible to change the logical operator applied to assessing the build conditions. If the Multiple Trigger's operator property is set to "And" then if any trigger says that a build should not happen, then the build will not happen. This is particularly useful when using multiple Filter Triggers.
            Like all triggers, the multiTrigger must be enclosed within a triggers element in the appropriate Project Configuration Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parameterTrigger" type="parameterTrigger">
        <xs:annotation>
          <xs:documentation>
            Trigger to add build parameters to an integration request.
            Like all triggers, the parameterTrigger must be enclosed within a triggers element in the appropriate Project Configuration Block.
            The configuration of the nested trigger is not the same as when using that trigger outside a filter trigger. When using the &lt;parameterTrigger&gt;
            element, the inner trigger must be specified with the &lt;trigger&gt;
            element. You could not use the &lt;intervalTrigger&gt; trigger element in this example.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="projectTrigger" type="projectTrigger">
        <xs:annotation>
          <xs:documentation>
            The Project Trigger is used to trigger a build when the specified dependent project has completed its build. This trigger can help you split your build process across projects and servers. For example, you could have a CCNet project that will trigger the regression test suite once the main development build has completed successfully. This dependent build could be running on either a local or a remote CCNet server.
            The Project Trigger works by using .NET remoting to poll the status of the dependent project. Whenever it detects that the dependent project has completed a build, the Project Trigger will fire. The Project Trigger can be configured to fire when the dependent project build succeeded, failed or threw an exception. In order to avoid hammering the remote project through polling, the Project Trigger is composed of an Interval Trigger  that will set a polling interval to 5 seconds. This inner trigger can be adjusted through changing the configuration.
            Like all triggers, the projectTrigger must be enclosed within a triggers element in the appropriate Project Configuration Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="scheduleTrigger" type="scheduleTrigger">
        <xs:annotation>
          <xs:documentation>
            The Schedule Trigger is used to specify that an integration should be run at a certain time on certain days. By default, an integration will only be triggered if modifications have been detected since the last integration. The trigger can be configured to force a build even if have occurred to source control. The items to watch for modifications are specified with Source Control Blocks.
            Like all triggers, the scheduleTrigger must be enclosed within a triggers element in the appropriate Project Configuration Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="urlTrigger" type="urlTrigger">
        <xs:annotation>
          <xs:documentation>
            The Url Trigger is used to trigger a CCNet build when the page at a particular url changes. The Url Trigger will poll the specified url according to a configured polling interval to detect if the last modified date of the page has changed since the last integration.
            This trigger is especially useful in reducing the load on your source control system caused by the polling for modifications performed by an Interval Trigger. If your source control system supports trigger scripts (such as the use of commitinfo scripts in CVS), you can use create a trigger to touch the page that is being monitored by CCNet to start a new integration.
            Like all triggers, the urlTrigger must be enclosed within a triggers element in the appropriate Project Configuration Block.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="trigger" abstract="true"/>

  <xs:complexType name="filterTrigger">
    <xs:complexContent>
      <xs:extension base="trigger">
        <xs:all>
          <xs:element name="trigger" type="trigger" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The inner trigger to filter.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="buildCondition" type="BuildCondition" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The condition that will be returned if a build is requested during the filter window. The default value is  *NoBuild*indicating that no build will be performed
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="startTime" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The start of the filter window. Builds will not occur after this time and before the end time.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="endTime" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The end of the filter window. Builds will not occur before this time and after the start time.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="weekDays" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The week days on which the filter should be applied (eg. Monday, Tuesday). By default, all days of the week are set. The filter will have no effect on other days.
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice minOccurs="1" maxOccurs="7">
                <xs:element name="weekDay" type="DayOfWeek">
                  <xs:annotation>
                    <xs:documentation>The day of the week.</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="intervalTrigger">
    <xs:complexContent>
      <xs:extension base="trigger">
        <xs:all>
          <xs:element name="buildCondition" type="BuildCondition" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The condition that should be used to launch the integration. By default, this value is  *IfModificationExists*, meaning that an integration will only be triggered if modifications have been detected. Set this attribute to  *ForceBuild* in order to ensure that a build should be launched regardless of whether new modifications are detected.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="name" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the trigger. This name is passed to external tools as a means to identify the trigger that requested the build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="seconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The number of seconds after an integration cycle completes before triggering the next integration cycle.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="initialSeconds" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The delay (in seconds) from CCNet startup to the first check for modifications.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="multiTrigger">
    <xs:complexContent>
      <xs:extension base="trigger">
        <xs:all>
          <xs:element name="operator" type="Operator" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The logical operator to apply to the results of the nested triggers (And or Or).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="triggers" type="Triggers" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The nested triggers.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parameterTrigger">
    <xs:complexContent>
      <xs:extension base="trigger">
        <xs:all>
          <xs:element name="trigger" type="trigger" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The inner trigger to filter.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="parameters" type="NameValuePairs" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The parameters to pass onto the inner trigger.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="projectTrigger">
    <xs:complexContent>
      <xs:extension base="trigger">
        <xs:all>
          <xs:element name="project" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the dependent project to trigger a build from.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="serverUri" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The URI for the CCNet server containing the dependent project.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="triggerStatus" type="IntegrationStatus" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The status of the dependent project that will be used to trigger the build. For example, if this value is set to Success then a build will be triggered when the dependent project completes a successful build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="innerTrigger" type="trigger" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The trigger used to modulate the polling interval for the ProjectTrigger. By default, this is set to a ForceBuild IntervalTrigger that will cause the trigger to check the status of the dependent project every 5 seconds.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="triggerFirstTime" type="xs:boolean" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Whether to trigger on the first time or not.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="scheduleTrigger">
    <xs:complexContent>
      <xs:extension base="trigger">
        <xs:all>
          <xs:element name="buildCondition" type="BuildCondition" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The condition that should be used to launch the integration. By default, this value is  *IfModificationExists*, meaning that an integration will only be triggered if modifications have been detected. Set this attribute to  *ForceBuild* in order to ensure that a build should be launched regardless of whether new modifications are detected.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="weekDays" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The week days on which the build should be run (eg. Monday, Tuesday). By default, all days of the week are set.
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice minOccurs="1" maxOccurs="7">
                <xs:element name="weekDay" type="DayOfWeek">
                  <xs:annotation>
                    <xs:documentation>The day of the week.</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="time" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The time of day that the build should run at. The time should be specified in a locale-specific format (ie. H:mm am/pm is acceptable for US locales.)
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="randomOffSetInMinutesFromTime" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Adds a random amount of minutes between 0 and set value to the time. This is mainly meant for spreading the load of actions to a central server. Value must be between 0 and 59.
              </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="59" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="name" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the trigger. This name is passed to external tools as a means to identify the trigger that requested the build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="urlTrigger">
    <xs:complexContent>
      <xs:extension base="trigger">
        <xs:all>
          <xs:element name="buildCondition" type="BuildCondition" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The condition that should be used to launch the integration. By default, this value is  *IfModificationExists*, meaning that an integration will only be triggered if modifications have been detected. Set this attribute to  *ForceBuild* in order to ensure that a build should be launched regardless of whether new modifications are detected.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="url" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The url to poll for changes.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="name" type="String" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the trigger. This name is passed to external tools as a means to identify the trigger that requested the build.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="seconds" type="xs:double" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The number of seconds after an integration cycle completes before triggering the next integration cycle.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="initialSeconds" type="xs:double" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The delay (in seconds) from CCNet startup to the first check for modifications.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MergeFileInfo" mixed="true">
    <xs:attribute name="action" type="MergeActionType">
      <xs:annotation>
        <xs:documentation>
          The type of the file to merge.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Timeout" mixed="true">
    <xs:simpleContent>
      <xs:extension base="xs:nonNegativeInteger">
        <xs:attribute name="units" type="TimeUnit">
          <xs:annotation>
            <xs:documentation>
              The time unit to use.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="EnvironmentVariables">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="variable">
        <xs:annotation>
          <xs:documentation>
            The variable to pass.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="name" type="String" use="required">
            <xs:annotation>
              <xs:documentation>
                The name of the environment variable.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" type="String" use="required">
            <xs:annotation>
              <xs:documentation>
                The value of the environment variable.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="ValuesList">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="value" type="NameValuePair">
        <xs:annotation>
          <xs:documentation>
            The value to pass.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="NameValuePairs">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="namedValue" type="NameValuePair">
        <xs:annotation>
          <xs:documentation>
            The value to pass.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="NameValuePair">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="String" use="required">
          <xs:annotation>
            <xs:documentation>
              The name of the value.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="impersonation">
    <xs:all>
      <xs:element name="domain" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the domain to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="user" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the user to impersonate.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="password" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The password of the user.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="ManifestGenerator" abstract="true"/>

  <xs:complexType name="defaultManifestGenerator">
    <xs:complexContent>
      <xs:extension base="ManifestGenerator">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="importManifest">
    <xs:complexContent>
      <xs:extension base="ManifestGenerator">
        <xs:all>
          <xs:element name="filename" type="String" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                The name of the file to import.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DynamicValues">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="directValue" type="directValue">
        <xs:annotation>
          <xs:documentation>
            This will replace the value of a property with the value from a parameter. If the user does not enter a parameter value, then the default will be used (when set).
            This dynamic value does not perform any formatting, it just directly puts the value into the property.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="replacementValue" type="replacementValue">
        <xs:annotation>
          <xs:documentation>
            This will replace any number of parameters into a format string. The format string can also include formats for each parameter.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="directValue">
    <xs:all>
      <xs:element name="property" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the property to set. This must be the same name as what is in the task/publisher/trigger configuration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parameter" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the parameter to use. This must be the same name as what is in the parameters configuration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="xs:string" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use if nothing is set in the parameters.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="Statistics">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="firstMatch" type="firstMatch">
        <xs:annotation>
          <xs:documentation>
            A statistic that extracts the first item that matches the specifed XML XPath.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statistic" type="statistic">
        <xs:annotation>
          <xs:documentation>
            A generic statistic.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="replacementValue">
    <xs:all>
      <xs:element name="property" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the property to set.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parameters" type="NameValuePairs" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The parameters to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="format" type="xs:string" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default value to use if nothing is set in the parameters.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="statistic">
    <xs:all>
      <xs:element name="xpath" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The XML XPath to locate the value of this statistic.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the statistic.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generateGraph" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should a graph be generated for this statistic?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="include" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should this statistic be collected and published?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="firstMatch">
    <xs:all>
      <xs:element name="xpath" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The XML XPath to locate the value of this statistic.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the statistic.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generateGraph" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should a graph be generated for this statistic?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="include" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Should this statistic be collected and published?
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="ldapConverter">
    <xs:all>
      <xs:element name="domainName" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The domain to query for the LDAP service.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ldapQueryField" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The field in the LDAP service to use for mapping the source control userid.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ldapLogOnUser" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Username for logging into the LDAP service.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ldapLogOnPassword" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The password to use for connecting to the LDAP service.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="regexConverter">
    <xs:all>
      <xs:element name="find" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A regular expression to match against the username and identify parts to be replaced.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="replace" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A string to replace the matched pattern in the username.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="subject">
    <xs:all>
      <xs:element name="value" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The value of the subject line, the text to be used for the subject. This may contain variables, see below.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildResult" type="BuildResultType" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A build result state, see below for the possible values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="group">
    <xs:all>
      <xs:element name="name" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the group, which corresponds to the "group" values used in the &lt;user&gt; elements.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="notifications" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A list of notification types, determining when to send email to this group.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="notificationType" type="NotificationType">
              <xs:annotation>
                <xs:documentation>
                  The type of notification.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="user">
    <xs:all>
      <xs:element name="name" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The user name of a user. This should match the user name in Source Control.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The Internet-style email address of the user (e.g., "joe@example.com").
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The group that the user is in. This needs to match the name of one of the &lt;group&gt; elements.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="header">
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the header.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The value of the header.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="controlAction">
    <xs:all>
      <xs:element name="project" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The project to run the command on.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="CruiseServerControlTaskActionType" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of command.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="coverageThreshold">
    <xs:all>
      <xs:element name="metric" type="NCoverMetric" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The coverage metric.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The minimum coverage value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="NCoverItemType" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of item.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pattern" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The matching pattern to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="coverageFilter">
    <xs:all>
      <xs:element name="data" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The pattern to use for matching elements.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="NCoverFilterItemType" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The type of item.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="regex" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether this is a regex or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="include" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to include or exclude items.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="httpRequest">
    <xs:all>
      <xs:element name="method" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The method to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headers" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The HTTP headers to send.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="header" type="header">
              <xs:annotation>
                <xs:documentation>
                  A header for an HTTP request.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="body" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The body of the request to send.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sendFile" type="String" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            A file to send in the request.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uri" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The URL to make the request to.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeout" type="Timeout" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The timeout period before cancelling the request.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="readWriteTimeout" type="Timeout" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The read/write timeout period.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="credentials" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The credentials to use in the request.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="userName" type="String">
            <xs:annotation>
              <xs:documentation>
                The user name to use.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="password" type="String">
            <xs:annotation>
              <xs:documentation>
                The password to use.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="domain" type="String">
            <xs:annotation>
              <xs:documentation>
                The domain to use.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="useDefaultCredentials" type="xs:boolean" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Whether to use the default credentials or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="permissions">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="rolePermission" type="rolePermission">
        <xs:annotation>
          <xs:documentation>
            Defines the permissions for a role (a group of users).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userPermission" type="userPermission">
        <xs:annotation>
          <xs:documentation>
            Defines the permissions for a user.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="permission">
    <xs:all>
      <xs:element name="defaultRight" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default right to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sendMessage" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to send messages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceBuild" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right for force or abort builds.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startProject" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to stop and start projects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="changeProject" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to change the configuration of projects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="viewSecurity" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to view security.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modifySecurity" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to modify security.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="viewProject" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to view a project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="viewConfiguration" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to view configuration and logs.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="rolePermission">
    <xs:all>
      <xs:element name="users" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The users in this role.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="userName" type="userName">
              <xs:annotation>
                <xs:documentation>
                  The name of a user.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultRight" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The default right to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sendMessage" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to send messages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceBuild" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right for force or abort builds.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startProject" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to stop and start projects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="changeProject" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to change the configuration of projects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="viewSecurity" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to view security.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modifySecurity" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to modify security.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="viewProject" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to view a project.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="viewConfiguration" type="SecurityRight" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The right to view configuration and logs.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="String" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the role.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ref" type="String" use="optional">
      <xs:annotation>
        <xs:documentation>
          The identifier of the referenced permission.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="userPermission">
    <xs:complexContent>
      <xs:extension base="permission">
        <xs:attribute name="user" type="String" use="required">
          <xs:annotation>
            <xs:documentation>
              The user name.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ref" type="String" use="optional">
          <xs:annotation>
            <xs:documentation>
              The identifier of the referenced permission.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="userName">
    <xs:all>
      <xs:element name="name" type="String" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The name of the user.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:simpleType name="AntsTraceLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Line"/>
      <xs:enumeration value="Method"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="AuthCachingMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="ExternalsOnly"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="BuildCondition">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NoBuild"/>
      <xs:enumeration value="IfModificationExists"/>
      <xs:enumeration value="ForceBuild"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="BuildResultType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Success"/>
      <xs:enumeration value="Broken"/>
      <xs:enumeration value="StillBroken"/>
      <xs:enumeration value="Fixed"/>
      <xs:enumeration value="Exception"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CleanUpMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="KeepLastXBuilds"/>
      <xs:enumeration value="DeleteBuildsOlderThanXDays"/>
      <xs:enumeration value="KeepMaximumXHistoryDataEntries"/>
      <xs:enumeration value="DeleteSubDirsOlderThanXDays"/>
      <xs:enumeration value="KeepLastXSubDirs"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CleanupPolicy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NoCleaning"/>
      <xs:enumeration value="KeepLastXBuilds"/>
      <xs:enumeration value="DeleteBuildsOlderThanXDays"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CruiseServerControlTaskActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="StartProject"/>
      <xs:enumeration value="StopProject"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DayOfWeek">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Monday"/>
      <xs:enumeration value="Tuesday"/>
      <xs:enumeration value="Wednesday"/>
      <xs:enumeration value="Thursday"/>
      <xs:enumeration value="Friday"/>
      <xs:enumeration value="Saturday"/>
      <xs:enumeration value="Sunday"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DisplayLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="Optional"/>
      <xs:enumeration value="Required"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Evaluations">
    <xs:restriction base="xs:string">
      <xs:enumeration value="equal"/>
      <xs:enumeration value="notEqual"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="FtpAction">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UploadFolder"/>
      <xs:enumeration value="DownloadFolder"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="IntegrationStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Success"/>
      <xs:enumeration value="Failure"/>
      <xs:enumeration value="Exception"/>
      <xs:enumeration value="Unknown"/>
      <xs:enumeration value="Cancelled"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MergeActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Merge"/>
      <xs:enumeration value="Copy"/>
      <xs:enumeration value="CData"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverFilterItemType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Default"/>
      <xs:enumeration value="Assembly"/>
      <xs:enumeration value="Namespace"/>
      <xs:enumeration value="Class"/>
      <xs:enumeration value="Method"/>
      <xs:enumeration value="Document"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverItemType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Default"/>
      <xs:enumeration value="View"/>
      <xs:enumeration value="Module"/>
      <xs:enumeration value="Namespace"/>
      <xs:enumeration value="Class"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverLogLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Default"/>
      <xs:enumeration value="None"/>
      <xs:enumeration value="Normal"/>
      <xs:enumeration value="Verbose"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverMetric">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SymbolCoverage"/>
      <xs:enumeration value="BranchCoverage"/>
      <xs:enumeration value="MethodCoverage"/>
      <xs:enumeration value="CyclomaticComplexity"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverMergeMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Default"/>
      <xs:enumeration value="KeepSourceFilters"/>
      <xs:enumeration value="Destructive"/>
      <xs:enumeration value="AppendFilters"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverReportType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FullCoverageReport"/>
      <xs:enumeration value="Summary"/>
      <xs:enumeration value="UncoveredCodeSections"/>
      <xs:enumeration value="SymbolSourceCode"/>
      <xs:enumeration value="SymbolSourceCodeClass"/>
      <xs:enumeration value="SymbolSourceCodeClassMethod"/>
      <xs:enumeration value="MethodSourceCode"/>
      <xs:enumeration value="MethodSourceCodeClass"/>
      <xs:enumeration value="MethodSourceCodeClassMethod"/>
      <xs:enumeration value="SymbolModule"/>
      <xs:enumeration value="SymbolModuleNamespace"/>
      <xs:enumeration value="SymbolModuleNamespaceClass"/>
      <xs:enumeration value="SymbolModuleNamespaceClassMethod"/>
      <xs:enumeration value="SymbolCCModuleClassFailedCoverageTop"/>
      <xs:enumeration value="SymbolCCModuleClassCoverageTop"/>
      <xs:enumeration value="MethodModuleNamespaceClass"/>
      <xs:enumeration value="MethodModuleNamespaceClassMethod"/>
      <xs:enumeration value="MethodCCModuleClassFailedCoverageTop"/>
      <xs:enumeration value="MethodCCModuleClassCoverageTop"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverReportFilter">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Default"/>
      <xs:enumeration value="Assembly"/>
      <xs:enumeration value="Namespace"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NCoverSortBy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="Name"/>
      <xs:enumeration value="ClassLine"/>
      <xs:enumeration value="CoveragePercentageAscending"/>
      <xs:enumeration value="CoveragePercentageDescending"/>
      <xs:enumeration value="UnvisitedSequencePointsAscending"/>
      <xs:enumeration value="UnvisitedSequencePointsDescending"/>
      <xs:enumeration value="VisitCountAscending"/>
      <xs:enumeration value="VisitCountDescending"/>
      <xs:enumeration value="FunctionCoverageAscending"/>
      <xs:enumeration value="FunctionCoverageDescending"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NotificationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Always"/>
      <xs:enumeration value="Change"/>
      <xs:enumeration value="Failed"/>
      <xs:enumeration value="Success"/>
      <xs:enumeration value="Fixed"/>
      <xs:enumeration value="Exception"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Operator">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Or"/>
      <xs:enumeration value="And"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ProcessPriorityClass">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal"/>
      <xs:enumeration value="Idle"/>
      <xs:enumeration value="High"/>
      <xs:enumeration value="RealTime"/>
      <xs:enumeration value="BelowNormal"/>
      <xs:enumeration value="AboveNormal"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ProjectInitialState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Started"/>
      <xs:enumeration value="Stopped"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ProjectStartupMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UseLastState"/>
      <xs:enumeration value="UseInitialState"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="QueueDuplicateHandlingMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UseFirst"/>
      <xs:enumeration value="ApplyForceBuildsReAdd"/>
      <xs:enumeration value="ApplyForceBuildsReplace"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SecurityRight">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Allow"/>
      <xs:enumeration value="Deny"/>
      <xs:enumeration value="Inherit"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SessionExpiryMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Fixed"/>
      <xs:enumeration value="Sliding"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Severity">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CriticalError"/>
      <xs:enumeration value="Error"/>
      <xs:enumeration value="CriticalWarning"/>
      <xs:enumeration value="Warning"/>
      <xs:enumeration value="Information"/>
      <xs:enumeration value="None"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SourceControlErrorHandlingPolicy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ReportEveryFailure"/>
      <xs:enumeration value="ReportOnRetryAmount"/>
      <xs:enumeration value="ReportOnEveryRetryAmount"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="String">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TimeUnit">
    <xs:restriction base="xs:string">
      <xs:enumeration value="millis"/>
      <xs:enumeration value="seconds"/>
      <xs:enumeration value="minutes"/>
      <xs:enumeration value="hours"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="YesNoValue">
    <xs:restriction base="xs:int">
      <xs:enumeration value="0"/>
      <xs:enumeration value="1"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
